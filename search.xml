<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BUAA_CO_P7_Document</title>
    <url>/2024/06/21/BUAA-CO-P7-Document/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<h1 id="MIPS微系统设计文档"><a href="#MIPS微系统设计文档" class="headerlink" title="MIPS微系统设计文档"></a>MIPS微系统设计文档</h1>
</blockquote>

<span id="more"></span>

<h2 id="1-设计草稿"><a href="#1-设计草稿" class="headerlink" title="1.设计草稿"></a>1.设计草稿</h2><h3 id="1-1-指令解析"><a href="#1-1-指令解析" class="headerlink" title="1.1.指令解析"></a>1.1.指令解析</h3><h4 id="1-1-1-cal-rr"><a href="#1-1-1-cal-rr" class="headerlink" title="1.1.1. cal_rr"></a>1.1.1. cal_rr</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100000</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100010</td>
</tr>
<tr>
<td align="center">and</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100100</td>
</tr>
<tr>
<td align="center">or</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100101</td>
</tr>
<tr>
<td align="center">slt</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">101010</td>
</tr>
<tr>
<td align="center">sltu</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">101011</td>
</tr>
</tbody></table>
<h4 id="1-1-2-cal-ri"><a href="#1-1-2-cal-ri" class="headerlink" title="1.1.2. cal_ri"></a>1.1.2. cal_ri</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">addi</td>
<td align="center">001000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">andi</td>
<td align="center">001100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">001101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-3-br-rr"><a href="#1-1-3-br-rr" class="headerlink" title="1.1.3. br_rr"></a>1.1.3. br_rr</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">beq</td>
<td align="center">000100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">bne</td>
<td align="center">000101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-4-mf"><a href="#1-1-4-mf" class="headerlink" title="1.1.4. mf"></a>1.1.4. mf</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mfhi</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">010000</td>
</tr>
<tr>
<td align="center">mflo</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">010010</td>
</tr>
</tbody></table>
<h4 id="1-1-5-mt"><a href="#1-1-5-mt" class="headerlink" title="1.1.5. mt"></a>1.1.5. mt</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mthi</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">010001</td>
</tr>
<tr>
<td align="center">mtlo</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">010011</td>
</tr>
</tbody></table>
<h4 id="1-1-6-load"><a href="#1-1-6-load" class="headerlink" title="1.1.6. load"></a>1.1.6. load</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">lb</td>
<td align="center">100000</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">lh</td>
<td align="center">100001</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">100011</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-7-store"><a href="#1-1-7-store" class="headerlink" title="1.1.7. store"></a>1.1.7. store</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">sb</td>
<td align="center">101000</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">sh</td>
<td align="center">101001</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">101011</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-8-MuDi"><a href="#1-1-8-MuDi" class="headerlink" title="1.1.8. MuDi"></a>1.1.8. MuDi</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mult</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011000</td>
</tr>
<tr>
<td align="center">multu</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011001</td>
</tr>
<tr>
<td align="center">div</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011010</td>
</tr>
<tr>
<td align="center">divu</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011011</td>
</tr>
</tbody></table>
<h4 id="1-1-9-lui"><a href="#1-1-9-lui" class="headerlink" title="1.1.9. lui"></a>1.1.9. lui</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">lui</td>
<td align="center">001111</td>
<td align="center">00000</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-10-jal"><a href="#1-1-10-jal" class="headerlink" title="1.1.10. jal"></a>1.1.10. jal</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">jal</td>
<td align="center">000011</td>
<td align="center">imm26[25:21]</td>
<td align="center">imm26[20:16]</td>
<td align="center">imm26[15:11]</td>
<td align="center">imm26[10:6]</td>
<td align="center">imm26[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-11-jr"><a href="#1-1-11-jr" class="headerlink" title="1.1.11. jr"></a>1.1.11. jr</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">jr</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">hint</td>
<td align="center">001000</td>
</tr>
</tbody></table>
<h4 id="1-1-12-mfc0"><a href="#1-1-12-mfc0" class="headerlink" title="1.1.12. mfc0"></a>1.1.12. mfc0</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,3]</th>
<th align="center">[2,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mfc0</td>
<td align="center">010000</td>
<td align="center">00000</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000000</td>
<td align="center">sel</td>
</tr>
</tbody></table>
<h4 id="1-1-13-mtc0"><a href="#1-1-13-mtc0" class="headerlink" title="1.1.13. mtc0"></a>1.1.13. mtc0</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,3]</th>
<th align="center">[2,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mtc0</td>
<td align="center">010000</td>
<td align="center">00100</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000000</td>
<td align="center">sel</td>
</tr>
</tbody></table>
<h4 id="1-1-14-eret"><a href="#1-1-14-eret" class="headerlink" title="1.1.14. eret"></a>1.1.14. eret</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,25]</th>
<th align="center">[24,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">eret</td>
<td align="center">010000</td>
<td align="center">1</td>
<td align="center">000000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011000</td>
</tr>
</tbody></table>
<h4 id="1-1-15-syscall"><a href="#1-1-15-syscall" class="headerlink" title="1.1.15. syscall"></a>1.1.15. syscall</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">syscall</td>
<td align="center">000000</td>
<td align="center">code[19:15]</td>
<td align="center">code[14:10]</td>
<td align="center">code[9:5]</td>
<td align="center">code[4:0]</td>
<td align="center">001100</td>
</tr>
</tbody></table>
<h4 id="1-1-16-others"><a href="#1-1-16-others" class="headerlink" title="1.1.16. others"></a>1.1.16. others</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">j</td>
<td align="center">000010</td>
<td align="center">imm26[25:21]</td>
<td align="center">imm26[20:16]</td>
<td align="center">imm26[15:11]</td>
<td align="center">imm26[10:6]</td>
<td align="center">imm26[5:0]</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">000000</td>
</tr>
</tbody></table>
<h3 id="1-2-数据通路"><a href="#1-2-数据通路" class="headerlink" title="1.2.数据通路"></a>1.2.数据通路</h3><ul>
<li>此处<strong>暂不考虑</strong>转发，需要转发的数据暂时用<code>(*)</code>标出，后续详细说明</li>
</ul>
<h4 id="1-2-1-稳定的连接"><a href="#1-2-1-稳定的连接" class="headerlink" title="1.2.1.稳定的连接"></a>1.2.1.稳定的连接</h4><ul>
<li><p>以下输入数据无论那条指令全部通用，即所有相关指令需要的数据来源均相同</p>
<table>
<thead>
<tr>
<th align="center">部件</th>
<th align="center">输入端口</th>
<th align="center">数据来源</th>
<th align="center">部件</th>
<th align="center">输入端口</th>
<th align="center">数据来源</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F_IFU</td>
<td align="center">NPC</td>
<td align="center">D_NPC_NPC</td>
<td align="center">E_ALU</td>
<td align="center">A</td>
<td align="center">E_reg_E_RD1（*）</td>
</tr>
<tr>
<td align="center">D_reg</td>
<td align="center">F_PC</td>
<td align="center">F_IFU_PC</td>
<td align="center">M_reg</td>
<td align="center">E_PC</td>
<td align="center">E_reg_E_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">F_IR</td>
<td align="center">F_IFU_instr</td>
<td align="center"></td>
<td align="center">E_WA</td>
<td align="center">E_reg_E_WA</td>
</tr>
<tr>
<td align="center">D_GRF[R]</td>
<td align="center">RA1</td>
<td align="center">D_reg_D_rs</td>
<td align="center"></td>
<td align="center">E_result</td>
<td align="center">E_ALU_result</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RA2</td>
<td align="center">D_reg_D_rt</td>
<td align="center"></td>
<td align="center">E_RD2</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">D_EXT</td>
<td align="center">in16</td>
<td align="center">D_reg_D_imm16</td>
<td align="center"></td>
<td align="center">E_E32</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">D_CMP</td>
<td align="center">A</td>
<td align="center">D_GRF_RD1（*）</td>
<td align="center">M_DM</td>
<td align="center">PC</td>
<td align="center">M_reg_M_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">D_GRF_RD2（*）</td>
<td align="center"></td>
<td align="center">A</td>
<td align="center">M_reg_M_result</td>
</tr>
<tr>
<td align="center">D_NPC</td>
<td align="center">PC</td>
<td align="center">D_reg_D_PC</td>
<td align="center"></td>
<td align="center">WD</td>
<td align="center">M_reg_M_RD2（*）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">judge</td>
<td align="center">D_CMP_result</td>
<td align="center">W_reg</td>
<td align="center">M_PC</td>
<td align="center">M_reg_M_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">offset</td>
<td align="center">D_reg_D_imm16</td>
<td align="center"></td>
<td align="center">M_WA</td>
<td align="center">M_reg_M_WA</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">tar_26</td>
<td align="center">D_reg_D_imm26</td>
<td align="center"></td>
<td align="center">M_result</td>
<td align="center">M_reg_M_result</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">tar_32</td>
<td align="center">D_GRF_RD1（*）</td>
<td align="center"></td>
<td align="center">M_RD</td>
<td align="center">M_DM_RD</td>
</tr>
<tr>
<td align="center">E_reg</td>
<td align="center">D_PC</td>
<td align="center">D_reg_D_PC</td>
<td align="center"></td>
<td align="center">M_E32</td>
<td align="center">M_reg_M_E32</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_RD1</td>
<td align="center">D_GRF_RD1</td>
<td align="center">W_GRF[W]</td>
<td align="center">PC</td>
<td align="center">W_reg_W_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_RD2</td>
<td align="center">D_GRF_RD2</td>
<td align="center"></td>
<td align="center">WA</td>
<td align="center">W_reg_W_WA</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_E32</td>
<td align="center">D_CMP_out32</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-2-2-不稳定的连接"><a href="#1-2-2-不稳定的连接" class="headerlink" title="1.2.2.不稳定的连接"></a>1.2.2.不稳定的连接</h4><ul>
<li><p>以下数据在不同的有关指令下需要不同的数据来源，需要用多路选择器来实现</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">E_reg_D_WA</th>
<th align="center">W_GRF_WD</th>
<th align="center">E_ALU_B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">D_reg_D_rd</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">D_reg_D_rd</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_RD</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_E32</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">$ra</td>
<td align="center">W_reg_W_PC + 8</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="1-3-部件说明"><a href="#1-3-部件说明" class="headerlink" title="1.3.部件说明"></a>1.3.部件说明</h3><h4 id="1-3-1-F-IFU（取指令单元）"><a href="#1-3-1-F-IFU（取指令单元）" class="headerlink" title="1.3.1. F_IFU（取指令单元）"></a>1.3.1. F_IFU（取指令单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">en</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">使能信号，为0时冻结PC</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">次指令地址</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">本指令地址</td>
</tr>
<tr>
<td align="center">instr</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">本指令内容</td>
</tr>
</tbody></table>
<ul>
<li>包含程序计数器(PC)和指令存储器(IM)</li>
<li>地址范围：0x00003000 ~ 0x00006FFF</li>
<li>PC支持同步复位和暂停冻结</li>
</ul>
<h4 id="1-3-2-D-reg（D级流水线寄存器）"><a href="#1-3-2-D-reg（D级流水线寄存器）" class="headerlink" title="1.3.2. D_reg（D级流水线寄存器）"></a>1.3.2. D_reg（D级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">en</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">使能信号，为0时冻结D_reg</td>
</tr>
<tr>
<td align="center">F_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">F级传入的指令地址</td>
</tr>
<tr>
<td align="center">F_IR</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令内容</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">D级当前的指令地址</td>
</tr>
<tr>
<td align="center">D_rs</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[25:21]</td>
</tr>
<tr>
<td align="center">D_rt</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[20:16]</td>
</tr>
<tr>
<td align="center">D_rd</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[15:11]</td>
</tr>
<tr>
<td align="center">D_imm16</td>
<td align="center">Out</td>
<td align="center">[15: 0]</td>
<td align="center">instr[15: 0]</td>
</tr>
<tr>
<td align="center">D_imm26</td>
<td align="center">Out</td>
<td align="center">[25: 0]</td>
<td align="center">instr[25: 0]</td>
</tr>
<tr>
<td align="center">D_opcode</td>
<td align="center">Out</td>
<td align="center">[ 5: 0]</td>
<td align="center">instr[31:26]</td>
</tr>
<tr>
<td align="center">D_func</td>
<td align="center">Out</td>
<td align="center">[ 5: 0]</td>
<td align="center">instr[ 5: 0]</td>
</tr>
</tbody></table>
<ul>
<li>支持同步复位和暂停冻结</li>
</ul>
<h4 id="1-3-3-D-GRF-R-（通用寄存器组读取部分）"><a href="#1-3-3-D-GRF-R-（通用寄存器组读取部分）" class="headerlink" title="1.3.3. D_GRF[R]（通用寄存器组读取部分）"></a>1.3.3. D_GRF[R]（通用寄存器组读取部分）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">RA1</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD1</td>
</tr>
<tr>
<td align="center">RA2</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD2</td>
</tr>
<tr>
<td align="center">RD1</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出1</td>
</tr>
<tr>
<td align="center">RD2</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出2</td>
</tr>
</tbody></table>
<ul>
<li><p>包含32个寄存器（0到31号），具有<strong>同步复位</strong>功能。</p>
</li>
<li><p><strong>0 号寄存器</strong>的值始终保持为 0。其他寄存器<strong>初始值（复位后）均为 0</strong>。</p>
</li>
<li><p>支持内部转发功能（相当于W级到D级的转发）</p>
</li>
<li><p>此处的说明仅限于通用寄存器的读取功能，写入功能在最后的W级说明</p>
</li>
</ul>
<h4 id="1-3-4-D-EXT（扩展单元）"><a href="#1-3-4-D-EXT（扩展单元）" class="headerlink" title="1.3.4. D_EXT（扩展单元）"></a>1.3.4. D_EXT（扩展单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">16bitIn</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">待扩展的16位数据</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">指示扩展方法</td>
</tr>
<tr>
<td align="center">32bitOut</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">扩展后的32位数据</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">operation</th>
</tr>
</thead>
<tbody><tr>
<td align="center">零拓展</td>
<td align="center">00</td>
</tr>
<tr>
<td align="center">符号拓展</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">将数据加载至高16位</td>
<td align="center">10</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-5-D-CMP（比较逻辑单元）"><a href="#1-3-5-D-CMP（比较逻辑单元）" class="headerlink" title="1.3.5. D_CMP（比较逻辑单元）"></a>1.3.5. D_CMP（比较逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数2</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较标准编号</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">是否满足比较标准</td>
</tr>
</tbody></table>
<h4 id="1-3-6-D-NPC（次地址计算单元）"><a href="#1-3-6-D-NPC（次地址计算单元）" class="headerlink" title="1.3.6. D_NPC（次地址计算单元）"></a>1.3.6. D_NPC（次地址计算单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">F级刚取出的指令地址</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">流水到D级的指令地址</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">计算次地址的方法编号</td>
</tr>
<tr>
<td align="center">judge</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">相对跳转指令的条件是否成立</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">[15: 0]</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">tar_26</td>
<td align="center">In</td>
<td align="center">[25: 0]</td>
<td align="center">绝对跳转的目的地址（26位立即数）</td>
</tr>
<tr>
<td align="center">tar_32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">绝对跳转的目的地址（寄存器值）</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">次指令地址</td>
</tr>
</tbody></table>
<ul>
<li>现在有四种跳转方法，如下表：</li>
</ul>
<table>
<thead>
<tr>
<th align="center">operation</th>
<th align="center">说明</th>
<th align="center">NPC</th>
</tr>
</thead>
<tbody><tr>
<td align="center">00</td>
<td align="center">顺序执行</td>
<td align="center">$PC + 4$</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">相对跳转（偏移量为16位立即数）</td>
<td align="center">$PC + 4 + offset |0^2$</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">绝对跳转（目的地址为26位立即数）</td>
<td align="center">$PC[31,28]|tar_26|0^2$</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">绝对跳转（目的地址来自寄存器）</td>
<td align="center">$tar_32$</td>
</tr>
</tbody></table>
<h4 id="1-3-7-D-CU（控制单元）"><a href="#1-3-7-D-CU（控制单元）" class="headerlink" title="1.3.7. D_CU（控制单元）"></a>1.3.7. D_CU（控制单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">EXT_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">拓展方法编号</td>
</tr>
<tr>
<td align="center">CMP_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">逻辑运算比较标准编号</td>
</tr>
<tr>
<td align="center">NPC_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">计算次地址的方法编号</td>
</tr>
<tr>
<td align="center">ALU_op</td>
<td align="center">Out</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_reg_D_WA_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入地址选择信号</td>
</tr>
<tr>
<td align="center">W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
</tbody></table>
<ul>
<li><p>本模块根据输入的指令的不同，产生不同的控制信号。</p>
</li>
<li><p>下表列举了选则信号的编码与对应数据的关系：</p>
<table>
<thead>
<tr>
<th align="center">E_reg_D_WA_sel</th>
<th align="center"></th>
<th align="center">W_GRF_WD_sel</th>
<th align="center"></th>
<th align="center">ALU_B_sel</th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
</tr>
<tr>
<td align="center">00</td>
<td align="center">rd</td>
<td align="center">00</td>
<td align="center">ALU_result</td>
<td align="center">0</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">rt</td>
<td align="center">01</td>
<td align="center">DM_RD</td>
<td align="center">1</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">$ra</td>
<td align="center">10</td>
<td align="center">EXT_32bitOut</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">11</td>
<td align="center">IFU_PC8</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
<li><p>IFU_op, ALU_op, EXT_op : 见部件说明的相关部分</p>
</li>
</ul>
<h5 id="指令对应输出"><a href="#指令对应输出" class="headerlink" title="指令对应输出"></a>指令对应输出</h5><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">IFU_op</th>
<th align="center">GRF_WE</th>
<th align="center">ALU_op</th>
<th align="center">DM_WE</th>
<th align="center">EXT_op</th>
<th align="center">GRF_WA_slt</th>
<th align="center">GRF_WD_slt</th>
<th align="center">ALU_B_slt</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">sub</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">or_</td>
<td align="center">0</td>
<td align="center">zero_ext</td>
<td align="center">01</td>
<td align="center">00</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">sign_ext</td>
<td align="center">01</td>
<td align="center">01</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">continue</td>
<td align="center">0</td>
<td align="center">add</td>
<td align="center">1</td>
<td align="center">sign_ext</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">branch</td>
<td align="center">0</td>
<td align="center">equal</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">high_ext</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">jump</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">10</td>
<td align="center">11</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">jumpRegister</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h4 id="1-3-8-HCU（冒险控制单元）"><a href="#1-3-8-HCU（冒险控制单元）" class="headerlink" title="1.3.8. HCU（冒险控制单元）"></a>1.3.8. HCU（冒险控制单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">rs</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[25:21]</td>
</tr>
<tr>
<td align="center">rt</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[20:16]</td>
</tr>
<tr>
<td align="center">rd</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[15:11]</td>
</tr>
<tr>
<td align="center">stall</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">暂停指示信号</td>
</tr>
<tr>
<td align="center">E_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">D_NPC_tar_32_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">NPC绝对跳转目的地址选择信号</td>
</tr>
<tr>
<td align="center">D_CMP_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_CMP_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">M_reg_E_RD2_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-9-E-reg（E级流水线寄存器）"><a href="#1-3-9-E-reg（E级流水线寄存器）" class="headerlink" title="1.3.9. E_reg（E级流水线寄存器）"></a>1.3.9. E_reg（E级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">clr</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">清空信号，用于插入气泡</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">D级传入的指令地址</td>
</tr>
<tr>
<td align="center">D_RD1</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第一个寄存器的内容</td>
</tr>
<tr>
<td align="center">D_RD2</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">D_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">D_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">D_H_E_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">D_H_E_ALU_A_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_E_ALU_B_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_reg_E_RD2_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_DM_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">D_ALU_op</td>
<td align="center">In</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">D_DM_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">D_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">D_E_ALU_B_sel</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">E_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">E级当前的指令地址</td>
</tr>
<tr>
<td align="center">E_RD1</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第一个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_RD2</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">E_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">E_H_E_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">E_H_E_ALU_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_H_E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_reg_E_RD2_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">E_H_M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_op</td>
<td align="center">Out</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">E_DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">E_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-10-E-ALU（算术逻辑单元）"><a href="#1-3-10-E-ALU（算术逻辑单元）" class="headerlink" title="1.3.10. E_ALU（算术逻辑单元）"></a>1.3.10. E_ALU（算术逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数2</td>
</tr>
<tr>
<td align="center">op</td>
<td align="center">In</td>
<td align="center">3</td>
<td align="center">运算符选择</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数值运算结果</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">result</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加（无符号运算，不考虑溢出）</td>
<td align="center">0000</td>
<td align="center">$A + B [31,0]$</td>
</tr>
<tr>
<td align="center">减（无符号运算，不考虑溢出）</td>
<td align="center">0001</td>
<td align="center">$A - B [31,0]$</td>
</tr>
<tr>
<td align="center">按位或</td>
<td align="center">0010</td>
<td align="center">$A | B$</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-11-E-MDU"><a href="#1-3-11-E-MDU" class="headerlink" title="1.3.11. E_MDU"></a>1.3.11. E_MDU</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数2</td>
</tr>
<tr>
<td align="center">start</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">开始计算的指令</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 3: 0]</td>
<td align="center">运算符编号</td>
</tr>
<tr>
<td align="center">busy</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">占用信号</td>
</tr>
<tr>
<td align="center">out</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">HI或LO寄存器的值</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">out</th>
</tr>
</thead>
<tbody><tr>
<td align="center">不考虑溢出的有符号乘法，存入HI，LO</td>
<td align="center">1000</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">不考虑溢出的无符号乘法，存入HI，LO</td>
<td align="center">1001</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">不考虑溢出的有符号除法，存入HI，LO</td>
<td align="center">1010</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">不考虑溢出的无符号除法，存入HI，LO</td>
<td align="center">1011</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">从高位寄存器取数据</td>
<td align="center">1100</td>
<td align="center">HI</td>
</tr>
<tr>
<td align="center">从低位寄存器取数据</td>
<td align="center">1101</td>
<td align="center">LO</td>
</tr>
<tr>
<td align="center">将新数据存入高位寄存器</td>
<td align="center">1110</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">将新数据存入低位寄存器</td>
<td align="center">1111</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-12-M-reg（M级流水线寄存器）"><a href="#1-3-12-M-reg（M级流水线寄存器）" class="headerlink" title="1.3.12. M_reg（M级流水线寄存器）"></a>1.3.12. M_reg（M级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">E_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">E级传入的指令地址</td>
</tr>
<tr>
<td align="center">E_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">E_result</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">E_RD2</td>
<td align="center">In</td>
<td align="center">[31: 1]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">E_H_E_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">E_H_M_DM_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">E_DM_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">E_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">M_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">M级当前的指令地址</td>
</tr>
<tr>
<td align="center">M_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">M_result</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">M_RD2</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">M_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">M_H_M_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">M级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">M_H_M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">M_DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">M_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">M_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-13-M-DM（数据存储器）"><a href="#1-3-13-M-DM（数据存储器）" class="headerlink" title="1.3.13. M_DM（数据存储器）"></a>1.3.13. M_DM（数据存储器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令地址</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">输入存取数据的地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">数据输出</td>
</tr>
</tbody></table>
<h4 id="1-3-14-W-reg（W级流水线寄存器）"><a href="#1-3-14-W-reg（W级流水线寄存器）" class="headerlink" title="1.3.14. W_reg（W级流水线寄存器）"></a>1.3.14. W_reg（W级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">M_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">M级输入的指令地址</td>
</tr>
<tr>
<td align="center">M_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">M_result</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">M_RD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">DM中取出的数值</td>
</tr>
<tr>
<td align="center">M_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">M_H_M_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">M级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">M_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">M_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">W_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">W级当前的指令地址</td>
</tr>
<tr>
<td align="center">W_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">W_result</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">W_RD</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">DM中取出的数值</td>
</tr>
<tr>
<td align="center">W_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">W_H_W_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">W级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">W_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">W_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-15-W-GRF-W-通用寄存器组读取部分"><a href="#1-3-15-W-GRF-W-通用寄存器组读取部分" class="headerlink" title="1.3.15. W_GRF[W] (通用寄存器组读取部分)"></a>1.3.15. W_GRF[W] (通用寄存器组读取部分)</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">WA</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">需要写入寄存器的内容</td>
</tr>
</tbody></table>
<h4 id="1-3-15-ExceptionPipeline-异常流水线"><a href="#1-3-15-ExceptionPipeline-异常流水线" class="headerlink" title="1.3.15. ExceptionPipeline (异常流水线)"></a>1.3.15. ExceptionPipeline (异常流水线)</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">req</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">异常信号</td>
</tr>
<tr>
<td align="center">stall</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">暂停信号</td>
</tr>
<tr>
<td align="center">D_bd</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">当前D级指令是否是延迟槽</td>
</tr>
<tr>
<td align="center">D_eret</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">当前D级指令是否是eret</td>
</tr>
<tr>
<td align="center">F_ExcCode</td>
<td align="center">In</td>
<td align="center">[4:0]</td>
<td align="center">F级给出的异常码</td>
</tr>
<tr>
<td align="center">D_ExcCode</td>
<td align="center">In</td>
<td align="center">[4:0]</td>
<td align="center">D级给出的异常码</td>
</tr>
<tr>
<td align="center">E_ExcCode</td>
<td align="center">In</td>
<td align="center">[4:0]</td>
<td align="center">E级给出的异常码</td>
</tr>
<tr>
<td align="center">M_ExcCode</td>
<td align="center">In</td>
<td align="center">[4:0]</td>
<td align="center">M级给出的异常码</td>
</tr>
<tr>
<td align="center">cp_bd</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">当前提交CP0的指令是否是延迟槽</td>
</tr>
<tr>
<td align="center">cp_eret</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">当前提交CP0的指令是否是eret</td>
</tr>
<tr>
<td align="center">cp_ExcCode</td>
<td align="center">Out</td>
<td align="center">[4:0]</td>
<td align="center">当前提交CP0的指令的异常码</td>
</tr>
</tbody></table>
<h3 id="1-4-冒险控制"><a href="#1-4-冒险控制" class="headerlink" title="1.4. 冒险控制"></a>1.4. 冒险控制</h3><ul>
<li>这部分主要对流水线冒险的控制进行分析，功能由HCU( <strong>Hazard Control Unit</strong>)实现</li>
</ul>
<h4 id="1-4-1-暂停（Stall）"><a href="#1-4-1-暂停（Stall）" class="headerlink" title="1.4.1. 暂停（Stall）"></a>1.4.1. 暂停（Stall）</h4><ul>
<li><p>在本CPU设计中，暂停作为一种不得已而为之的手段，尽可能少使用，所有数据冒险的解决以转发为主，只有转发完全无法解决问题时才采用暂停</p>
</li>
<li><p>下面基于<strong>A-T法</strong>进行分析</p>
<table>
<thead>
<tr>
<th align="center">type</th>
<th align="center">$T^{rs}_{use}$</th>
<th align="center">$T^{rt}_{use}$</th>
<th align="center">$T_{new}_E$</th>
<th align="center">instructions</th>
</tr>
</thead>
<tbody><tr>
<td align="center">cal_rr</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">add,sub,and,or,slt,sltu</td>
</tr>
<tr>
<td align="center">cal_ri</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
<td align="center">addi,andi,ori</td>
</tr>
<tr>
<td align="center">br_rz</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">beqz,bnez</td>
</tr>
<tr>
<td align="center">br_rr</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">beq,bne</td>
</tr>
<tr>
<td align="center">mf</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
<td align="center">mfhi,mflo</td>
</tr>
<tr>
<td align="center">mt</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">mthi,mtlo</td>
</tr>
<tr>
<td align="center">load</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">2</td>
<td align="center">lw,lh,lb</td>
</tr>
<tr>
<td align="center">store</td>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">&#x2F;</td>
<td align="center">sw,sh,sb</td>
</tr>
<tr>
<td align="center">MuDi</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">mult,multu,div,divu</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">lui</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">jal</td>
</tr>
<tr>
<td align="center">jalr</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">jalr</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">jr</td>
</tr>
<tr>
<td align="center">mfc0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">2</td>
<td align="center">mfc0</td>
</tr>
<tr>
<td align="center">mtc0</td>
<td align="center">&#x2F;</td>
<td align="center">2</td>
<td align="center">&#x2F;</td>
<td align="center">mtc0</td>
</tr>
</tbody></table>
</li>
</ul>
<p>暂停（S）与转发（F）策略矩阵：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$E_T_{new}&#x3D;2$</th>
<th align="center">$E_T_{new}&#x3D;1$</th>
<th align="center">$E_T_{new}&#x3D;0$</th>
<th align="center">$M_T_{new}&#x3D;1$</th>
<th align="center">$M_T_{new}&#x3D;0$</th>
<th align="center">$W_T_{new}&#x3D;0$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$T_{use} &#x3D; 0$</td>
<td align="center">S</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
<tr>
<td align="center">$T_{use} &#x3D; 1$</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
<tr>
<td align="center">$T_{use} &#x3D; 2$</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
</tbody></table>
<ul>
<li>这里具体实现时，一方面要对每一条指令分析并及时更新当前 $T^{rs}<em>{use}$  和  $T^{rt}</em>{use}$，另一方面要在冒险控制单元中加入两个寄存器，分别记录 $E_T_{new}$， $M_T_{new}$，然后根据当前指令更新前者，并根据前者的原值更新后者。 $W_T_{new}$一定为0不需要考虑</li>
<li>此外还需要用两个寄存器记录当前E，M级寄存器准备写入通用寄存器的数据的地址，这个数据在暂停和转发的判断时都会用到。这两个寄存器在每个指令进入HCU时（此时指令处于D级）进行更新，如果指令不涉及通用寄存器，就将对应的变量设置为0，在转发和暂停时进行判断，为0则可以忽略。另外需要在触发暂停时在<code>WA_E</code>插入气泡（即全零）避免出现奇怪的问题</li>
</ul>
<h4 id="1-4-2-转发（Forward）"><a href="#1-4-2-转发（Forward）" class="headerlink" title="1.4.2. 转发（Forward）"></a>1.4.2. 转发（Forward）</h4><ul>
<li><p>需要被转发的数据一定是即将存入通用寄存器的数据</p>
</li>
<li><p>转发数据的起始端只能在E，M，W三级的寄存器的输出处，其中D级需要的数据不需要考虑从W级寄存器发出，因为GRF实现了内部转发</p>
<p> E，M，W三级的寄存器的输出处设置MUX以选择输出的信号</p>
<table>
<thead>
<tr>
<th align="center">MUX</th>
<th align="center">Data1</th>
<th align="center">Data2</th>
<th align="center">Data3</th>
<th align="center">Data4</th>
</tr>
</thead>
<tbody><tr>
<td align="center">E_out</td>
<td align="center">E_PC + 8</td>
<td align="center">E_E32</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">M_out</td>
<td align="center">M_PC + 8</td>
<td align="center">M_E32</td>
<td align="center">M_result</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">W_out</td>
<td align="center">W_PC + 8</td>
<td align="center">W_E32</td>
<td align="center">W_result</td>
<td align="center">W_RD</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">00</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">11</td>
</tr>
</tbody></table>
<p> 这里HCU只需要计算并输出E_out_sel，其余两级直接流水即可</p>
</li>
<li><p>用到转发的接收端有：</p>
<table>
<thead>
<tr>
<th align="center">元件</th>
<th align="center">输入端口</th>
<th align="center">来源1</th>
<th align="center">来源2</th>
<th align="center">来源3</th>
</tr>
</thead>
<tbody><tr>
<td align="center">D_NPC</td>
<td align="center">tar_32</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD1</td>
</tr>
<tr>
<td align="center">D_CMP</td>
<td align="center">A</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD1</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD2</td>
</tr>
<tr>
<td align="center">E_ALU</td>
<td align="center">A</td>
<td align="center">M_out</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD1</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">M_out</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD2</td>
</tr>
<tr>
<td align="center">M_reg</td>
<td align="center">E_RD2</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">M_DM</td>
<td align="center">WD</td>
<td align="center">W_out</td>
<td align="center">M_reg_M_RD2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">11</td>
</tr>
</tbody></table>
<p>此处优先级：来源1 &gt; 来源2 &gt; 来源3，即越后产生的数据越“新鲜”，越优先</p>
</li>
<li><p>因为DM（所有存储指令）用数据用的太晚，两条前的数据会丢失，所以需要在指令进入M级时增加一条转发路径（即倒数第二条）。</p>
</li>
<li><p>GRF内部转发单独考虑（在WE有效且RA不为0时使用内部转发）</p>
</li>
</ul>
<h3 id="1-5-异常处理"><a href="#1-5-异常处理" class="headerlink" title="1.5. 异常处理"></a>1.5. 异常处理</h3><h4 id="1-4-1-异常表"><a href="#1-4-1-异常表" class="headerlink" title="1.4.1. 异常表"></a>1.4.1. 异常表</h4><table>
<thead>
<tr>
<th align="center">异常与中断码</th>
<th align="center">助记符与名称</th>
<th align="center">指令与指令类型</th>
<th align="center">描述</th>
<th align="center">检测点</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center"><code>Int</code>（外部中断）</td>
<td align="center">所有指令</td>
<td align="center">中断请求，来源于计时器与外部中断</td>
<td align="center">CP0</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center"><code>AdEL</code>（取指异常）</td>
<td align="center">所有指令</td>
<td align="center">PC 地址未字对齐或超过 0x3000 ~ 0x6ffc</td>
<td align="center">F_IFU</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"><code>AdEL</code>（取数异常）</td>
<td align="center"><code>lw</code></td>
<td align="center">取数地址未与 4 字节对齐</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>lh</code></td>
<td align="center">取数地址未与 2 字节对齐</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>lh</code>, <code>lb</code></td>
<td align="center">取 Timer 寄存器的值</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>load</code> 型指令</td>
<td align="center">计算地址时加法溢出</td>
<td align="center">E_ALU</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>load</code> 型指令</td>
<td align="center">取数地址超出 DM、Timer0、Timer1、中断发生器的范围</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center"><code>AdES</code>（存数异常）</td>
<td align="center"><code>sw</code></td>
<td align="center">存数地址未 4 字节对齐</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>sh</code></td>
<td align="center">存数地址未 2 字节对齐</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>sh</code>, <code>sb</code></td>
<td align="center">存 Timer 寄存器的值</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>store</code> 型指令</td>
<td align="center">计算地址加法溢出</td>
<td align="center">E_ALU</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>store</code> 型指令</td>
<td align="center">向计时器的 Count 寄存器存值</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"><code>store</code> 型指令</td>
<td align="center">存数地址超出 DM、Timer0、Timer1、中断发生器的范围</td>
<td align="center">M_BE</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center"><code>Syscall</code>（系统调用）</td>
<td align="center"><code>syscall</code></td>
<td align="center">系统调用</td>
<td align="center">D_CU</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center"><code>RI</code>（未知指令）</td>
<td align="center">-</td>
<td align="center">未知的指令码</td>
<td align="center">D_CU</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center"><code>Ov</code>（溢出异常）</td>
<td align="center"><code>add</code>, <code>addi</code>, <code>sub</code></td>
<td align="center">算术溢出</td>
<td align="center">E_ALU</td>
</tr>
</tbody></table>
<h4 id="1-4-2-CP0"><a href="#1-4-2-CP0" class="headerlink" title="1.4.2. CP0"></a>1.4.2. CP0</h4><p>CP0 协处理器是 P7 新引入的功能模块，我们需要用这个模块完成两个主要功能，一个是对异常进行配置，一个是记录异常的信息。CP0 有很多个寄存器用来配置或者记录，我们只需要实现其中的几个，如下所示：</p>
<table>
<thead>
<tr>
<th>寄存器</th>
<th>编号</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>SR</td>
<td>12</td>
<td>配置异常的功能。</td>
</tr>
<tr>
<td>Cause</td>
<td>13</td>
<td>记录异常发生的原因和情况。</td>
</tr>
<tr>
<td>EPC</td>
<td>14</td>
<td>记录异常处理结束后需要返回的 PC。</td>
</tr>
</tbody></table>
<p>每个寄存器都是 32 位的，我们只需要其中的几位，列表如下：</p>
<table>
<thead>
<tr>
<th align="center">寄存器</th>
<th align="center">功能域</th>
<th align="center">位域</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SR（State Register）</td>
<td align="center">IM（Interrupt Mask）</td>
<td align="center">15:10</td>
<td align="center">分别对应六个外部中断，相应位置 1 表示允许中断，置 0 表示禁止中断。这是一个被动的功能，只能通过 <code>mtc0</code> 这个指令修改，通过修改这个功能域，我们可以屏蔽一些中断。</td>
</tr>
<tr>
<td align="center">SR（State Register）</td>
<td align="center">EXL（Exception Level）</td>
<td align="center">1</td>
<td align="center">任何异常发生时置位，这会强制进入核心态（也就是进入异常处理程序）并禁止中断。</td>
</tr>
<tr>
<td align="center">SR（State Register）</td>
<td align="center">IE（Interrupt Enable）</td>
<td align="center">0</td>
<td align="center">全局中断使能，该位置 1 表示允许中断，置 0 表示禁止中断。</td>
</tr>
<tr>
<td align="center">Cause</td>
<td align="center">BD（Branch Delay）</td>
<td align="center">31</td>
<td align="center">当该位置 1 的时候，EPC 指向当前指令的前一条指令（一定为跳转），否则指向当前指令。</td>
</tr>
<tr>
<td align="center">Cause</td>
<td align="center">IP（Interrupt Pending）</td>
<td align="center">15:10</td>
<td align="center">为 6 位待决的中断位，分别对应 6 个外部中断，相应位置 1 表示有中断，置 0 表示无中断，将会每个周期被修改一次，修改的内容来自计时器和外部中断。</td>
</tr>
<tr>
<td align="center">Cause</td>
<td align="center">ExcCode</td>
<td align="center">6:2</td>
<td align="center">异常编码，记录当前发生的是什么异常。</td>
</tr>
<tr>
<td align="center">EPC</td>
<td align="center">-</td>
<td align="center">-</td>
<td align="center">记录异常处理结束后需要返回的 PC。</td>
</tr>
</tbody></table>
<p>当发生异常的时候，CPU 会自动将异常信息写入 CP0 的相应寄存器（如 <code>Cause</code> 和 <code>EPC</code>）。异常处理程序会访问相应寄存器，来了解异常的信息以进行异常处理。</p>
<p> CP0 的端口声明如下：</p>
<table>
<thead>
<tr>
<th align="center">端口</th>
<th align="center">方向</th>
<th align="center">位数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">IN</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">reset</td>
<td align="center">IN</td>
<td align="center">1</td>
<td align="center">复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">IN</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">IN</td>
<td align="center">[4:0]</td>
<td align="center">寄存器地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">IN</td>
<td align="center">[31:0]</td>
<td align="center">CP0 写入数据</td>
</tr>
<tr>
<td align="center">VPC</td>
<td align="center">IN</td>
<td align="center">[31:0]</td>
<td align="center">受害 PC</td>
</tr>
<tr>
<td align="center">BDIn</td>
<td align="center">IN</td>
<td align="center">1</td>
<td align="center">是否是延迟槽指令</td>
</tr>
<tr>
<td align="center">ExcCodeIn</td>
<td align="center">IN</td>
<td align="center">[4:0]</td>
<td align="center">记录异常类型</td>
</tr>
<tr>
<td align="center">HWInt</td>
<td align="center">IN</td>
<td align="center">[5:0]</td>
<td align="center">输入中断信号</td>
</tr>
<tr>
<td align="center">EXLClr</td>
<td align="center">IN</td>
<td align="center">1</td>
<td align="center">用来复位 EXL</td>
</tr>
<tr>
<td align="center">Req</td>
<td align="center">OUT</td>
<td align="center">1</td>
<td align="center">进入处理程序请求</td>
</tr>
<tr>
<td align="center">RD</td>
<td align="center">OUT</td>
<td align="center">[31:0]</td>
<td align="center">CP0 读出数据</td>
</tr>
<tr>
<td align="center">EPCOut</td>
<td align="center">OUT</td>
<td align="center">[31:0]</td>
<td align="center">EPC 的值</td>
</tr>
</tbody></table>
<h4 id="1-4-2-系统桥"><a href="#1-4-2-系统桥" class="headerlink" title="1.4.2. 系统桥"></a>1.4.2. 系统桥</h4><p>简单的组合逻辑电路，用于分配写入使能码和独处的数据</p>
<table>
<thead>
<tr>
<th align="center">端口</th>
<th align="center">方向</th>
<th align="center">位数</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CPU_byteen</td>
<td align="center">IN</td>
<td align="center">[3:0]</td>
<td align="center">CPU给出的字节写使能信号</td>
</tr>
<tr>
<td align="center">CPU_Addr</td>
<td align="center">IN</td>
<td align="center">[31:0]</td>
<td align="center">CPU给出的目的地址</td>
</tr>
<tr>
<td align="center">DM_Dout</td>
<td align="center">IN</td>
<td align="center">[31:0]</td>
<td align="center">DM的读取结果</td>
</tr>
<tr>
<td align="center">TC0_Dout</td>
<td align="center">IN</td>
<td align="center">[31:0]</td>
<td align="center">0号计时器的读取结果</td>
</tr>
<tr>
<td align="center">TC1_Dout</td>
<td align="center">IN</td>
<td align="center">[31:0]</td>
<td align="center">1号计时器的读取结果</td>
</tr>
<tr>
<td align="center">DM_byteen</td>
<td align="center">OUT</td>
<td align="center">[3:0]</td>
<td align="center">DM的字节写使能信号</td>
</tr>
<tr>
<td align="center">TC0_byteen</td>
<td align="center">OUT</td>
<td align="center">[3:0]</td>
<td align="center">0号计时器的字节写使能信号</td>
</tr>
<tr>
<td align="center">TC1_byteen</td>
<td align="center">OUT</td>
<td align="center">[3:0]</td>
<td align="center">1号计时器的字节写使能信号</td>
</tr>
<tr>
<td align="center">Int_byteen</td>
<td align="center">OUT</td>
<td align="center">[3:0]</td>
<td align="center">中断发生器的字节写使能信号</td>
</tr>
<tr>
<td align="center">D_out</td>
<td align="center">OUT</td>
<td align="center">[31:0]</td>
<td align="center">CPU要读取的数据</td>
</tr>
</tbody></table>
<h2 id="2-测试方案"><a href="#2-测试方案" class="headerlink" title="2. 测试方案"></a>2. 测试方案</h2><ul>
<li><p>考虑数据的各种情况，编写测试数据，用Mars汇编为机器码导入CPU并进行对拍，测试各个功能模块的正确性。</p>
</li>
<li><p>考虑冒险的各种情况，编写测试数据并利用助教提供的工具进行覆盖率检查，用覆盖率较高的数据进行测试。</p>
</li>
<li><p>使用了姜涵章同学在讨论区分享的自动化测试工具<code>coKiller</code>辅助测试。</p>
</li>
</ul>
<h2 id="3-思考题"><a href="#3-思考题" class="headerlink" title="3. 思考题"></a>3. 思考题</h2><ol>
<li><p><strong>请查阅相关资料，说明鼠标和键盘的输入信号是如何被 CPU 知晓的？</strong></p>
<p>这个过程相当于我们设计的MIPS微系统中的“中断发生器”，但是中断信号的种类更多，键盘鼠标等外设产生不同的中断信号让CPU处理，从而触发不同的中断处理程序，实现不同的效果。</p>
</li>
<li><p><strong>请思考为什么我们的 CPU 处理中断异常必须是已经指定好的地址？如果你的 CPU 支持用户自定义入口地址，即处理中断异常的程序由用户提供，其还能提供我们所希望的功能吗？如果可以，请说明这样可能会出现什么问题？否则举例说明。（假设用户提供的中断处理程序合法）</strong></p>
<p>我认为是可以实现的，但是会损失一些性能，而且会让程序设计需要考虑的事情变多（还需要考虑自定义的异常处理程序地址是否与其它程序甚至数据冲突）。<br>比如我设想的一种实现方法是单独拿出来一个专门的寄存器用来储存中断处理程序入口地址，这个寄存器只有在特定情况下可写，且要求写入的指令地址不与其它程序冲突（这部分实现可能比较复杂）。这样就可以在中断时直接读取该寄存器来获取自定义的异常处理入口。</p>
</li>
<li><p><strong>为何与外设通信需要 Bridge？</strong></p>
<p>因为外设多种多样，而CPU的设计需要尽可能适用于最多的情况，因此不能将接口设计得只能与特定外设交互。将CPU与外设之间加上桥就可以让CPU只设计简单的几个接口，具体与外设交流的逻辑交给桥，这样可以简化CPU的设计、提高其泛用性。</p>
</li>
<li><p><strong>请阅读官方提供的定时器源代码，阐述两种中断模式的异同，并分别针对每一种模式绘制状态移图。</strong></p>
<p> 模式0是单次计数，计时结束后持续输出中断信号；模式1则是周期计数，计时结束后输出1周期中断信号就重新计数。</p>
<blockquote>
<ul>
<li><p>模式0（单次计数）：<br> 当计数器倒计数为 0 后，计数器停止计数，此时控制寄存器中的使能 Enable自动变为 0。当使能 &gt;Enable 被设置为 1 后，初值寄存器值再次被加载至计数器，计数器重新启动倒计数。<br> 模式 0 通常用于产生定时中断。例如，为操作系统的时间片调度机制提供定时。模式 0 下的中断信号将持续有效，直至控制寄存器中的中断屏蔽位被设置为0。</p>
</li>
<li><p>模式1（周期计数）：<br> 当计数器倒计数为 0 后，初值寄存器值被自动加载至计数器，计数器继续倒计数。<br> 模式 1 通常用于产生周期性脉冲。例如，可以用模式 1 产生步进电机所需的步进控制信号。不同于模式 &gt;0，模式 1 下计数器每次计数循环中只产生一周期的中断信号。</p>
</li>
</ul>
</blockquote>
<p>状态转移图：</p>
<p><img src="/state.png" alt="state"></p>
</li>
<li><p><strong>倘若中断信号流入的时候，在检测宏观 PC 的一级如果是一条空泡（你的 CPU 该级所有信息均为空）指令，此时会发生什么问题？在此例基础上请思考：在 P7 中，清空流水线产生的空泡指令应该保留原指令的哪些信息？</strong></p>
<p>会使得外部看来宏观PC突然变成了0，不符合“封装成单周期CPU”的要求。</p>
<p>清空流水线要保留PC值（因为中断异常清空流水线时应该直接将每一级的PC都指向异常处理程序的入口）。</p>
<p>另外，对于暂停产生的空泡 ，需要保留其PC与BD两个信息，这样在外部看起来指令的执行是稳定的 ，而不会一条指令的PC先是0再变成本身的PC，或是这条指令先是“自称”不是延迟槽（因为空泡部分被彻底清空了），后来又“自称”是延迟槽（这前提还是成功保留了延迟槽信号，如果跟着空泡一起彻底清理了延迟槽标记还会导致CP0的BD写入错误）。</p>
</li>
<li><p><strong>为什么 jalr 指令为什么不能写成 jalr $31, $31？</strong></p>
<p>因为这是一条有延迟槽的跳转指令，因此如果它修改了自己要读的寄存器，就会导致一旦延迟槽出错，经过异常处理之后再次运行这条跳转指令与首次运行的效果不同。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>BUAA_CO</category>
      </categories>
      <tags>
        <tag>BUAA</tag>
        <tag>CO_P7</tag>
      </tags>
  </entry>
  <entry>
    <title>BUAA_CO_P6_Document</title>
    <url>/2024/06/21/BUAA-CO-P6-Document/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<h1 id="较完备流水线CPU设计文档"><a href="#较完备流水线CPU设计文档" class="headerlink" title="较完备流水线CPU设计文档"></a>较完备流水线CPU设计文档</h1>
</blockquote>

<span id="more"></span>

<h2 id="1-设计草稿"><a href="#1-设计草稿" class="headerlink" title="1.设计草稿"></a>1.设计草稿</h2><h3 id="1-1-指令解析"><a href="#1-1-指令解析" class="headerlink" title="1.1.指令解析"></a>1.1.指令解析</h3><h4 id="1-1-1-cal-rr"><a href="#1-1-1-cal-rr" class="headerlink" title="1.1.1. cal_rr"></a>1.1.1. cal_rr</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100000</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100010</td>
</tr>
<tr>
<td align="center">and</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100100</td>
</tr>
<tr>
<td align="center">or</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100101</td>
</tr>
<tr>
<td align="center">slt</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">101010</td>
</tr>
<tr>
<td align="center">sltu</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">101011</td>
</tr>
</tbody></table>
<h4 id="1-1-2-cal-ri"><a href="#1-1-2-cal-ri" class="headerlink" title="1.1.2. cal_ri"></a>1.1.2. cal_ri</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">addi</td>
<td align="center">001000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">andi</td>
<td align="center">001100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">001101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-3-br-rr"><a href="#1-1-3-br-rr" class="headerlink" title="1.1.3. br_rr"></a>1.1.3. br_rr</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">beq</td>
<td align="center">000100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">bne</td>
<td align="center">000101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-4-mf"><a href="#1-1-4-mf" class="headerlink" title="1.1.4. mf"></a>1.1.4. mf</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mfhi</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">010000</td>
</tr>
<tr>
<td align="center">mflo</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">010010</td>
</tr>
</tbody></table>
<h4 id="1-1-5-mt"><a href="#1-1-5-mt" class="headerlink" title="1.1.5. mt"></a>1.1.5. mt</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mthi</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">010001</td>
</tr>
<tr>
<td align="center">mtlo</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">010011</td>
</tr>
</tbody></table>
<h4 id="1-1-6-load"><a href="#1-1-6-load" class="headerlink" title="1.1.6. load"></a>1.1.6. load</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">lb</td>
<td align="center">100000</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">lh</td>
<td align="center">100001</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">100011</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-7-store"><a href="#1-1-7-store" class="headerlink" title="1.1.7. store"></a>1.1.7. store</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">sb</td>
<td align="center">101000</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">sh</td>
<td align="center">101001</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">101011</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-8-MuDi"><a href="#1-1-8-MuDi" class="headerlink" title="1.1.8. MuDi"></a>1.1.8. MuDi</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mult</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011000</td>
</tr>
<tr>
<td align="center">multu</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011001</td>
</tr>
<tr>
<td align="center">div</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011010</td>
</tr>
<tr>
<td align="center">divu</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">011011</td>
</tr>
</tbody></table>
<h4 id="1-1-9-lui"><a href="#1-1-9-lui" class="headerlink" title="1.1.9. lui"></a>1.1.9. lui</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">lui</td>
<td align="center">001111</td>
<td align="center">00000</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-10-jal"><a href="#1-1-10-jal" class="headerlink" title="1.1.10. jal"></a>1.1.10. jal</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">jal</td>
<td align="center">000011</td>
<td align="center">imm26[25:21]</td>
<td align="center">imm26[20:16]</td>
<td align="center">imm26[15:11]</td>
<td align="center">imm26[10:6]</td>
<td align="center">imm26[5:0]</td>
</tr>
</tbody></table>
<h4 id="1-1-11-jr"><a href="#1-1-11-jr" class="headerlink" title="1.1.11. jr"></a>1.1.11. jr</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">jr</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">hint</td>
<td align="center">001000</td>
</tr>
</tbody></table>
<h4 id="1-1-12-others"><a href="#1-1-12-others" class="headerlink" title="1.1.12. others"></a>1.1.12. others</h4><table>
<thead>
<tr>
<th align="center">instruction</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">j</td>
<td align="center">000010</td>
<td align="center">imm26[25:21]</td>
<td align="center">imm26[20:16]</td>
<td align="center">imm26[15:11]</td>
<td align="center">imm26[10:6]</td>
<td align="center">imm26[5:0]</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">000000</td>
</tr>
</tbody></table>
<h3 id="1-2-数据通路"><a href="#1-2-数据通路" class="headerlink" title="1.2.数据通路"></a>1.2.数据通路</h3><ul>
<li>此处<strong>暂不考虑</strong>转发，需要转发的数据暂时用<code>(*)</code>标出，后续详细说明</li>
</ul>
<h4 id="1-2-1-稳定的连接"><a href="#1-2-1-稳定的连接" class="headerlink" title="1.2.1.稳定的连接"></a>1.2.1.稳定的连接</h4><ul>
<li><p>以下输入数据无论那条指令全部通用，即所有相关指令需要的数据来源均相同</p>
<table>
<thead>
<tr>
<th align="center">部件</th>
<th align="center">输入端口</th>
<th align="center">数据来源</th>
<th align="center">部件</th>
<th align="center">输入端口</th>
<th align="center">数据来源</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F_IFU</td>
<td align="center">NPC</td>
<td align="center">D_NPC_NPC</td>
<td align="center">E_ALU</td>
<td align="center">A</td>
<td align="center">E_reg_E_RD1（*）</td>
</tr>
<tr>
<td align="center">D_reg</td>
<td align="center">F_PC</td>
<td align="center">F_IFU_PC</td>
<td align="center">M_reg</td>
<td align="center">E_PC</td>
<td align="center">E_reg_E_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">F_IR</td>
<td align="center">F_IFU_instr</td>
<td align="center"></td>
<td align="center">E_WA</td>
<td align="center">E_reg_E_WA</td>
</tr>
<tr>
<td align="center">D_GRF[R]</td>
<td align="center">RA1</td>
<td align="center">D_reg_D_rs</td>
<td align="center"></td>
<td align="center">E_result</td>
<td align="center">E_ALU_result</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RA2</td>
<td align="center">D_reg_D_rt</td>
<td align="center"></td>
<td align="center">E_RD2</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">D_EXT</td>
<td align="center">in16</td>
<td align="center">D_reg_D_imm16</td>
<td align="center"></td>
<td align="center">E_E32</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">D_CMP</td>
<td align="center">A</td>
<td align="center">D_GRF_RD1（*）</td>
<td align="center">M_DM</td>
<td align="center">PC</td>
<td align="center">M_reg_M_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">D_GRF_RD2（*）</td>
<td align="center"></td>
<td align="center">A</td>
<td align="center">M_reg_M_result</td>
</tr>
<tr>
<td align="center">D_NPC</td>
<td align="center">PC</td>
<td align="center">D_reg_D_PC</td>
<td align="center"></td>
<td align="center">WD</td>
<td align="center">M_reg_M_RD2（*）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">judge</td>
<td align="center">D_CMP_result</td>
<td align="center">W_reg</td>
<td align="center">M_PC</td>
<td align="center">M_reg_M_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">offset</td>
<td align="center">D_reg_D_imm16</td>
<td align="center"></td>
<td align="center">M_WA</td>
<td align="center">M_reg_M_WA</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">tar_26</td>
<td align="center">D_reg_D_imm26</td>
<td align="center"></td>
<td align="center">M_result</td>
<td align="center">M_reg_M_result</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">tar_32</td>
<td align="center">D_GRF_RD1（*）</td>
<td align="center"></td>
<td align="center">M_RD</td>
<td align="center">M_DM_RD</td>
</tr>
<tr>
<td align="center">E_reg</td>
<td align="center">D_PC</td>
<td align="center">D_reg_D_PC</td>
<td align="center"></td>
<td align="center">M_E32</td>
<td align="center">M_reg_M_E32</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_RD1</td>
<td align="center">D_GRF_RD1</td>
<td align="center">W_GRF[W]</td>
<td align="center">PC</td>
<td align="center">W_reg_W_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_RD2</td>
<td align="center">D_GRF_RD2</td>
<td align="center"></td>
<td align="center">WA</td>
<td align="center">W_reg_W_WA</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_E32</td>
<td align="center">D_CMP_out32</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-2-2-不稳定的连接"><a href="#1-2-2-不稳定的连接" class="headerlink" title="1.2.2.不稳定的连接"></a>1.2.2.不稳定的连接</h4><ul>
<li><p>以下数据在不同的有关指令下需要不同的数据来源，需要用多路选择器来实现</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">E_reg_D_WA</th>
<th align="center">W_GRF_WD</th>
<th align="center">E_ALU_B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">D_reg_D_rd</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">D_reg_D_rd</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_RD</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_E32</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">$ra</td>
<td align="center">W_reg_W_PC + 8</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="1-3-部件说明"><a href="#1-3-部件说明" class="headerlink" title="1.3.部件说明"></a>1.3.部件说明</h3><h4 id="1-3-1-F-IFU（取指令单元）"><a href="#1-3-1-F-IFU（取指令单元）" class="headerlink" title="1.3.1. F_IFU（取指令单元）"></a>1.3.1. F_IFU（取指令单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">en</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">使能信号，为0时冻结PC</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">次指令地址</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">本指令地址</td>
</tr>
<tr>
<td align="center">instr</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">本指令内容</td>
</tr>
</tbody></table>
<ul>
<li>包含程序计数器(PC)和指令存储器(IM)</li>
<li>地址范围：0x00003000 ~ 0x00006FFF</li>
<li>PC支持同步复位和暂停冻结</li>
</ul>
<h4 id="1-3-2-D-reg（D级流水线寄存器）"><a href="#1-3-2-D-reg（D级流水线寄存器）" class="headerlink" title="1.3.2. D_reg（D级流水线寄存器）"></a>1.3.2. D_reg（D级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">en</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">使能信号，为0时冻结D_reg</td>
</tr>
<tr>
<td align="center">F_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">F级传入的指令地址</td>
</tr>
<tr>
<td align="center">F_IR</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令内容</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">D级当前的指令地址</td>
</tr>
<tr>
<td align="center">D_rs</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[25:21]</td>
</tr>
<tr>
<td align="center">D_rt</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[20:16]</td>
</tr>
<tr>
<td align="center">D_rd</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[15:11]</td>
</tr>
<tr>
<td align="center">D_imm16</td>
<td align="center">Out</td>
<td align="center">[15: 0]</td>
<td align="center">instr[15: 0]</td>
</tr>
<tr>
<td align="center">D_imm26</td>
<td align="center">Out</td>
<td align="center">[25: 0]</td>
<td align="center">instr[25: 0]</td>
</tr>
<tr>
<td align="center">D_opcode</td>
<td align="center">Out</td>
<td align="center">[ 5: 0]</td>
<td align="center">instr[31:26]</td>
</tr>
<tr>
<td align="center">D_func</td>
<td align="center">Out</td>
<td align="center">[ 5: 0]</td>
<td align="center">instr[ 5: 0]</td>
</tr>
</tbody></table>
<ul>
<li>支持同步复位和暂停冻结</li>
</ul>
<h4 id="1-3-3-D-GRF-R-（通用寄存器组读取部分）"><a href="#1-3-3-D-GRF-R-（通用寄存器组读取部分）" class="headerlink" title="1.3.3. D_GRF[R]（通用寄存器组读取部分）"></a>1.3.3. D_GRF[R]（通用寄存器组读取部分）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">RA1</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD1</td>
</tr>
<tr>
<td align="center">RA2</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD2</td>
</tr>
<tr>
<td align="center">RD1</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出1</td>
</tr>
<tr>
<td align="center">RD2</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出2</td>
</tr>
</tbody></table>
<ul>
<li><p>包含32个寄存器（0到31号），具有<strong>同步复位</strong>功能。</p>
</li>
<li><p><strong>0 号寄存器</strong>的值始终保持为 0。其他寄存器<strong>初始值（复位后）均为 0</strong>。</p>
</li>
<li><p>支持内部转发功能（相当于W级到D级的转发）</p>
</li>
<li><p>此处的说明仅限于通用寄存器的读取功能，写入功能在最后的W级说明</p>
</li>
</ul>
<h4 id="1-3-4-D-EXT（扩展单元）"><a href="#1-3-4-D-EXT（扩展单元）" class="headerlink" title="1.3.4. D_EXT（扩展单元）"></a>1.3.4. D_EXT（扩展单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">16bitIn</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">待扩展的16位数据</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">指示扩展方法</td>
</tr>
<tr>
<td align="center">32bitOut</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">扩展后的32位数据</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">operation</th>
</tr>
</thead>
<tbody><tr>
<td align="center">零拓展</td>
<td align="center">00</td>
</tr>
<tr>
<td align="center">符号拓展</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">将数据加载至高16位</td>
<td align="center">10</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-5-D-CMP（比较逻辑单元）"><a href="#1-3-5-D-CMP（比较逻辑单元）" class="headerlink" title="1.3.5. D_CMP（比较逻辑单元）"></a>1.3.5. D_CMP（比较逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数2</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较标准编号</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">是否满足比较标准</td>
</tr>
</tbody></table>
<h4 id="1-3-6-D-NPC（次地址计算单元）"><a href="#1-3-6-D-NPC（次地址计算单元）" class="headerlink" title="1.3.6. D_NPC（次地址计算单元）"></a>1.3.6. D_NPC（次地址计算单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">F级刚取出的指令地址</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">流水到D级的指令地址</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">计算次地址的方法编号</td>
</tr>
<tr>
<td align="center">judge</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">相对跳转指令的条件是否成立</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">[15: 0]</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">tar_26</td>
<td align="center">In</td>
<td align="center">[25: 0]</td>
<td align="center">绝对跳转的目的地址（26位立即数）</td>
</tr>
<tr>
<td align="center">tar_32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">绝对跳转的目的地址（寄存器值）</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">次指令地址</td>
</tr>
</tbody></table>
<ul>
<li>现在有四种跳转方法，如下表：</li>
</ul>
<table>
<thead>
<tr>
<th align="center">operation</th>
<th align="center">说明</th>
<th align="center">NPC</th>
</tr>
</thead>
<tbody><tr>
<td align="center">00</td>
<td align="center">顺序执行</td>
<td align="center">$PC + 4$</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">相对跳转（偏移量为16位立即数）</td>
<td align="center">$PC + 4 + offset |0^2$</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">绝对跳转（目的地址为26位立即数）</td>
<td align="center">$PC[31,28]|tar_26|0^2$</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">绝对跳转（目的地址来自寄存器）</td>
<td align="center">$tar_32$</td>
</tr>
</tbody></table>
<h4 id="1-3-7-D-CU（控制单元）"><a href="#1-3-7-D-CU（控制单元）" class="headerlink" title="1.3.7. D_CU（控制单元）"></a>1.3.7. D_CU（控制单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">EXT_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">拓展方法编号</td>
</tr>
<tr>
<td align="center">CMP_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">逻辑运算比较标准编号</td>
</tr>
<tr>
<td align="center">NPC_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">计算次地址的方法编号</td>
</tr>
<tr>
<td align="center">ALU_op</td>
<td align="center">Out</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_reg_D_WA_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入地址选择信号</td>
</tr>
<tr>
<td align="center">W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
</tbody></table>
<ul>
<li><p>本模块根据输入的指令的不同，产生不同的控制信号。</p>
</li>
<li><p>下表列举了选则信号的编码与对应数据的关系：</p>
<table>
<thead>
<tr>
<th align="center">E_reg_D_WA_sel</th>
<th align="center"></th>
<th align="center">W_GRF_WD_sel</th>
<th align="center"></th>
<th align="center">ALU_B_sel</th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
</tr>
<tr>
<td align="center">00</td>
<td align="center">rd</td>
<td align="center">00</td>
<td align="center">ALU_result</td>
<td align="center">0</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">rt</td>
<td align="center">01</td>
<td align="center">DM_RD</td>
<td align="center">1</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">$ra</td>
<td align="center">10</td>
<td align="center">EXT_32bitOut</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">11</td>
<td align="center">IFU_PC8</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
<li><p>IFU_op, ALU_op, EXT_op : 见部件说明的相关部分</p>
</li>
</ul>
<h5 id="指令对应输出"><a href="#指令对应输出" class="headerlink" title="指令对应输出"></a>指令对应输出</h5><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">IFU_op</th>
<th align="center">GRF_WE</th>
<th align="center">ALU_op</th>
<th align="center">DM_WE</th>
<th align="center">EXT_op</th>
<th align="center">GRF_WA_slt</th>
<th align="center">GRF_WD_slt</th>
<th align="center">ALU_B_slt</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">sub</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">or_</td>
<td align="center">0</td>
<td align="center">zero_ext</td>
<td align="center">01</td>
<td align="center">00</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">sign_ext</td>
<td align="center">01</td>
<td align="center">01</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">continue</td>
<td align="center">0</td>
<td align="center">add</td>
<td align="center">1</td>
<td align="center">sign_ext</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">branch</td>
<td align="center">0</td>
<td align="center">equal</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">high_ext</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">jump</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">10</td>
<td align="center">11</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">jumpRegister</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h4 id="1-3-8-HCU（冒险控制单元）"><a href="#1-3-8-HCU（冒险控制单元）" class="headerlink" title="1.3.8. HCU（冒险控制单元）"></a>1.3.8. HCU（冒险控制单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">rs</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[25:21]</td>
</tr>
<tr>
<td align="center">rt</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[20:16]</td>
</tr>
<tr>
<td align="center">rd</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[15:11]</td>
</tr>
<tr>
<td align="center">stall</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">暂停指示信号</td>
</tr>
<tr>
<td align="center">E_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">D_NPC_tar_32_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">NPC绝对跳转目的地址选择信号</td>
</tr>
<tr>
<td align="center">D_CMP_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_CMP_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">M_reg_E_RD2_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-9-E-reg（E级流水线寄存器）"><a href="#1-3-9-E-reg（E级流水线寄存器）" class="headerlink" title="1.3.9. E_reg（E级流水线寄存器）"></a>1.3.9. E_reg（E级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">clr</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">清空信号，用于插入气泡</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">D级传入的指令地址</td>
</tr>
<tr>
<td align="center">D_RD1</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第一个寄存器的内容</td>
</tr>
<tr>
<td align="center">D_RD2</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">D_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">D_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">D_H_E_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">D_H_E_ALU_A_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_E_ALU_B_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_reg_E_RD2_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_DM_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">D_ALU_op</td>
<td align="center">In</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">D_DM_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">D_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">D_E_ALU_B_sel</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">E_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">E级当前的指令地址</td>
</tr>
<tr>
<td align="center">E_RD1</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第一个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_RD2</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">E_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">E_H_E_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">E_H_E_ALU_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_H_E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_reg_E_RD2_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">E_H_M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_op</td>
<td align="center">Out</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">E_DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">E_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-10-E-ALU（算术逻辑单元）"><a href="#1-3-10-E-ALU（算术逻辑单元）" class="headerlink" title="1.3.10. E_ALU（算术逻辑单元）"></a>1.3.10. E_ALU（算术逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数2</td>
</tr>
<tr>
<td align="center">op</td>
<td align="center">In</td>
<td align="center">3</td>
<td align="center">运算符选择</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数值运算结果</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">result</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加（无符号运算，不考虑溢出）</td>
<td align="center">0000</td>
<td align="center">$A + B [31,0]$</td>
</tr>
<tr>
<td align="center">减（无符号运算，不考虑溢出）</td>
<td align="center">0001</td>
<td align="center">$A - B [31,0]$</td>
</tr>
<tr>
<td align="center">按位或</td>
<td align="center">0010</td>
<td align="center">$A | B$</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-11-E-MDU"><a href="#1-3-11-E-MDU" class="headerlink" title="1.3.11. E_MDU"></a>1.3.11. E_MDU</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数2</td>
</tr>
<tr>
<td align="center">start</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">开始计算的指令</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 3: 0]</td>
<td align="center">运算符编号</td>
</tr>
<tr>
<td align="center">busy</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">占用信号</td>
</tr>
<tr>
<td align="center">out</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">HI或LO寄存器的值</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">out</th>
</tr>
</thead>
<tbody><tr>
<td align="center">不考虑溢出的有符号乘法，存入HI，LO</td>
<td align="center">1000</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">不考虑溢出的无符号乘法，存入HI，LO</td>
<td align="center">1001</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">不考虑溢出的有符号除法，存入HI，LO</td>
<td align="center">1010</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">不考虑溢出的无符号除法，存入HI，LO</td>
<td align="center">1011</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">从高位寄存器取数据</td>
<td align="center">1100</td>
<td align="center">HI</td>
</tr>
<tr>
<td align="center">从低位寄存器取数据</td>
<td align="center">1101</td>
<td align="center">LO</td>
</tr>
<tr>
<td align="center">将新数据存入高位寄存器</td>
<td align="center">1110</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">将新数据存入低位寄存器</td>
<td align="center">1111</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-12-M-reg（M级流水线寄存器）"><a href="#1-3-12-M-reg（M级流水线寄存器）" class="headerlink" title="1.3.12. M_reg（M级流水线寄存器）"></a>1.3.12. M_reg（M级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">E_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">E级传入的指令地址</td>
</tr>
<tr>
<td align="center">E_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">E_result</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">E_RD2</td>
<td align="center">In</td>
<td align="center">[31: 1]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">E_H_E_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">E_H_M_DM_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">E_DM_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">E_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">M_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">M级当前的指令地址</td>
</tr>
<tr>
<td align="center">M_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">M_result</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">M_RD2</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">M_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">M_H_M_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">M级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">M_H_M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">M_DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">M_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">M_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-13-M-DM（数据存储器）"><a href="#1-3-13-M-DM（数据存储器）" class="headerlink" title="1.3.13. M_DM（数据存储器）"></a>1.3.13. M_DM（数据存储器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令地址</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">输入存取数据的地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">数据输出</td>
</tr>
</tbody></table>
<h4 id="1-3-14-W-reg（W级流水线寄存器）"><a href="#1-3-14-W-reg（W级流水线寄存器）" class="headerlink" title="1.3.14. W_reg（W级流水线寄存器）"></a>1.3.14. W_reg（W级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">M_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">M级输入的指令地址</td>
</tr>
<tr>
<td align="center">M_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">M_result</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">M_RD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">DM中取出的数值</td>
</tr>
<tr>
<td align="center">M_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">M_H_M_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">M级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">M_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">M_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">W_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">W级当前的指令地址</td>
</tr>
<tr>
<td align="center">W_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">W_result</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">W_RD</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">DM中取出的数值</td>
</tr>
<tr>
<td align="center">W_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">W_H_W_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">W级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">W_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">W_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-15-W-GRF-W-通用寄存器组读取部分"><a href="#1-3-15-W-GRF-W-通用寄存器组读取部分" class="headerlink" title="1.3.15. W_GRF[W] (通用寄存器组读取部分)"></a>1.3.15. W_GRF[W] (通用寄存器组读取部分)</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">WA</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">需要写入寄存器的内容</td>
</tr>
</tbody></table>
<h3 id="1-4-冒险控制"><a href="#1-4-冒险控制" class="headerlink" title="1.4. 冒险控制"></a>1.4. 冒险控制</h3><ul>
<li>这部分主要对流水线冒险的控制进行分析，功能由HCU( <strong>Hazard Control Unit</strong>)实现</li>
</ul>
<h4 id="1-4-1-暂停（Stall）"><a href="#1-4-1-暂停（Stall）" class="headerlink" title="1.4.1. 暂停（Stall）"></a>1.4.1. 暂停（Stall）</h4><ul>
<li><p>在本CPU设计中，暂停作为一种不得已而为之的手段，尽可能少使用，所有数据冒险的解决以转发为主，只有转发完全无法解决问题时才采用暂停</p>
</li>
<li><p>下面基于<strong>A-T法</strong>进行分析</p>
<table>
<thead>
<tr>
<th align="center">type</th>
<th align="center">$T^{rs}_{use}$</th>
<th align="center">$T^{rt}_{use}$</th>
<th align="center">$T_{new}_E$</th>
<th align="center">instructions</th>
</tr>
</thead>
<tbody><tr>
<td align="center">cal_rr</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">add,sub,and,or,slt,sltu</td>
</tr>
<tr>
<td align="center">cal_ri</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
<td align="center">addi,andi,ori</td>
</tr>
<tr>
<td align="center">br_rz</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">beqz,bnez</td>
</tr>
<tr>
<td align="center">br_rr</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">beq,bne</td>
</tr>
<tr>
<td align="center">mf</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
<td align="center">mfhi,mflo</td>
</tr>
<tr>
<td align="center">mt</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">mthi,mtlo</td>
</tr>
<tr>
<td align="center">load</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">2</td>
<td align="center">lw,lh,lb</td>
</tr>
<tr>
<td align="center">store</td>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">&#x2F;</td>
<td align="center">sw,sh,sb</td>
</tr>
<tr>
<td align="center">MuDi</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">mult,multu,div,divu</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">lui</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">jal</td>
</tr>
<tr>
<td align="center">jalr</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">jalr</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">jr</td>
</tr>
</tbody></table>
</li>
</ul>
<p>暂停（S）与转发（F）策略矩阵：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$E_T_{new}&#x3D;2$</th>
<th align="center">$E_T_{new}&#x3D;1$</th>
<th align="center">$E_T_{new}&#x3D;0$</th>
<th align="center">$M_T_{new}&#x3D;1$</th>
<th align="center">$M_T_{new}&#x3D;0$</th>
<th align="center">$W_T_{new}&#x3D;0$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$T_{use} &#x3D; 0$</td>
<td align="center">S</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
<tr>
<td align="center">$T_{use} &#x3D; 1$</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
<tr>
<td align="center">$T_{use} &#x3D; 2$</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
</tbody></table>
<ul>
<li>这里具体实现时，一方面要对每一条指令分析并及时更新当前 $T^{rs}<em>{use}$  和  $T^{rt}</em>{use}$，另一方面要在冒险控制单元中加入两个寄存器，分别记录 $E_T_{new}$， $M_T_{new}$，然后根据当前指令更新前者，并根据前者的原值更新后者。 $W_T_{new}$一定为0不需要考虑</li>
<li>此外还需要用两个寄存器记录当前E，M级寄存器准备写入通用寄存器的数据的地址，这个数据在暂停和转发的判断时都会用到。这两个寄存器在每个指令进入HCU时（此时指令处于D级）进行更新，如果指令不涉及通用寄存器，就将对应的变量设置为0，在转发和暂停时进行判断，为0则可以忽略。另外需要在触发暂停时在<code>WA_E</code>插入气泡（即全零）避免出现奇怪的问题</li>
</ul>
<h4 id="1-4-2-转发（Forward）"><a href="#1-4-2-转发（Forward）" class="headerlink" title="1.4.2. 转发（Forward）"></a>1.4.2. 转发（Forward）</h4><ul>
<li><p>需要被转发的数据一定是即将存入通用寄存器的数据</p>
</li>
<li><p>转发数据的起始端只能在E，M，W三级的寄存器的输出处，其中D级需要的数据不需要考虑从W级寄存器发出，因为GRF实现了内部转发</p>
<p> E，M，W三级的寄存器的输出处设置MUX以选择输出的信号</p>
<table>
<thead>
<tr>
<th align="center">MUX</th>
<th align="center">Data1</th>
<th align="center">Data2</th>
<th align="center">Data3</th>
<th align="center">Data4</th>
</tr>
</thead>
<tbody><tr>
<td align="center">E_out</td>
<td align="center">E_PC + 8</td>
<td align="center">E_E32</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">M_out</td>
<td align="center">M_PC + 8</td>
<td align="center">M_E32</td>
<td align="center">M_result</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">W_out</td>
<td align="center">W_PC + 8</td>
<td align="center">W_E32</td>
<td align="center">W_result</td>
<td align="center">W_RD</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">00</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">11</td>
</tr>
</tbody></table>
<p> 这里HCU只需要计算并输出E_out_sel，其余两级直接流水即可</p>
</li>
<li><p>用到转发的接收端有：</p>
<table>
<thead>
<tr>
<th align="center">元件</th>
<th align="center">输入端口</th>
<th align="center">来源1</th>
<th align="center">来源2</th>
<th align="center">来源3</th>
</tr>
</thead>
<tbody><tr>
<td align="center">D_NPC</td>
<td align="center">tar_32</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD1</td>
</tr>
<tr>
<td align="center">D_CMP</td>
<td align="center">A</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD1</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD2</td>
</tr>
<tr>
<td align="center">E_ALU</td>
<td align="center">A</td>
<td align="center">M_out</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD1</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">M_out</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD2</td>
</tr>
<tr>
<td align="center">M_reg</td>
<td align="center">E_RD2</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">M_DM</td>
<td align="center">WD</td>
<td align="center">W_out</td>
<td align="center">M_reg_M_RD2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">11</td>
</tr>
</tbody></table>
<p>此处优先级：来源1 &gt; 来源2 &gt; 来源3，即越后产生的数据越“新鲜”，越优先</p>
</li>
<li><p>因为DM（所有存储指令）用数据用的太晚，两条前的数据会丢失，所以需要在指令进入M级时增加一条转发路径（即倒数第二条）。</p>
</li>
<li><p>GRF内部转发单独考虑（在WE有效且RA不为0时使用内部转发）</p>
</li>
</ul>
<h2 id="2-测试方案"><a href="#2-测试方案" class="headerlink" title="2. 测试方案"></a>2. 测试方案</h2><ul>
<li><p>考虑数据的各种情况，编写测试数据，用Mars汇编为机器码导入CPU并进行对拍，测试各个功能模块的正确性。</p>
</li>
<li><p>考虑冒险的各种情况，编写测试数据并利用助教提供的工具进行覆盖率检查，用覆盖率较高的数据进行测试。</p>
</li>
<li><p>使用了姜涵章同学在讨论区分享的自动化测试工具<code>coKiller</code>辅助测试。</p>
</li>
</ul>
<h2 id="3-思考题"><a href="#3-思考题" class="headerlink" title="3. 思考题"></a>3. 思考题</h2><ol>
<li><p><strong>为什么需要有单独的乘除法部件而不是整合进 ALU？为何需要有独立的 HI、LO 寄存器？</strong></p>
<p>单独的乘除法部件：因为乘除法耗时较长，而且并不经常出现，所以可以把乘除法独立出一个部件，这样在进行乘除法运算的同时还可以并行其它指令，避免了无意义的暂停延迟。<br>单独的HI、LO寄存器：它们是保证乘除法部件独立性的重要组成部分。有了这两个寄存器，乘除法结束之后可以把结果就地保存，而不是立即存入通用寄存器，那样可能回与正在并行的其它指令在写寄存器时发生冲突，需要更多的冲突控制手段。独立HI、LO寄存器也符合“高内聚、低耦合”的设计原则。</p>
</li>
<li><p><strong>真实的流水线 CPU 是如何使用实现乘除法的？请查阅相关资料进行简单说明。</strong></p>
<p>经过查找资料和分析思考，我找到了几种实现乘除法的思路，下面记录几种我能想明白的。</p>
<ul>
<li><p>首先，有一种比较朴素的方法：</p>
<ul>
<li><p>乘法：使用累次移位和加法完成。例如A[31: 0] * B[31: 0]：</p>
<p>首先将A符号拓展至64位，然后循环32次：每次对B[0]进行判断，若为1则在结果上累加A，随后将A左移1位，B右移一位，完成一次循环。循环完毕即可获得乘法结果，这样需要32个周期来计算32位乘法，比较慢。</p>
</li>
<li><p>除法：循环试商法，循环比较并相减。例如A[31: 0] &#x2F; B[31: 0]：</p>
<p>将A零拓展至64位，然后循环32次：每次将A的前32位与B比较，若大于则将A的前32位减去B并给A加上1，否则不做操作，完成一次循环。如此循环32次后高32位为商，低32位为余数。这样也是32个周期计算32位除法，比较慢。</p>
</li>
</ul>
</li>
<li><p>其次，还有一种用空间换时间的办法，可以一定程度优化乘法：</p>
<ul>
<li>首先同时计算出每一位是否需要移位累加（根据B这一位是否为1）并保存，然后用类似二叉树的方法将他们两两相加再两两相加，以logN的复杂度算出最终结果。</li>
</ul>
</li>
<li><p>最后，摘录一种我觉得很有道理但是不太明白的做法（来自TobyShi学长的博客）：</p>
<blockquote>
<p>在真实的流水线 CPU 中，乘法通常有若干个较小的乘法单元组成（组合逻辑），然后每个周期计算特定的几位，依次累加起来，于是会在几个周期后得到正确的最终结果；除法通常使用试商法，通常也是使用组合逻辑在一个周期内计算 4 位左右的商，经过 8 个周期正好可以计算结束。</p>
</blockquote>
</li>
</ul>
</li>
<li><p><strong>请结合自己的实现分析，你是如何处理 Busy 信号带来的周期阻塞的？</strong></p>
<p>在rs、rt的读写冲突造成的阻塞之外，再并列一种由乘除槽冲突导致的阻塞。当且仅当乘除槽正在计算（包括刚要开始计算）时，对D级涉及乘除槽的指令进行阻塞。</p>
<p>代码片段如下：</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">assign</span> MDU_stall = ((E_MDU_start | E_MDU_busy) &amp; (MuDi | mf | mt));</span><br><span class="line"><span class="keyword">assign</span> stall = (MDU_stall | stall_rs | stall_rt);</span><br></pre></td></tr></table></figure>

<p>此外，还有一种思路是在乘除槽正在运行时只对取结果类型的指令进行阻塞，更改寄存器值或者新的乘除运算可以通过并直接取代原来的计算，这样可以提高效率但是因为比较复杂我没有实现。</p>
</li>
<li><p><strong>请问采用字节使能信号的方式处理写指令有什么好处？（提示：从清晰性、统一性等角度考虑）</strong></p>
<p> 清晰性：字节使能可以用一个信号同时完成写使能和指定字节内写入地址两个操作，并且清晰明了，能一眼看出存储目的。<br> 统一性：统一了各种存数据指令的使能信号，可以通过调整使能信号来完成对不同字节的写入，同时这也为添加其它存数据指令提供了便利，比如可以很方便地实现将一个字的首尾字节存入对应地址。<br> 此外，CPU给出字节使能信号也很好地践行了“高内聚，低耦合”的原则，CPU不必再单独告知外置DM具体内存地址，只需要按字传递即可。</p>
</li>
<li><p><strong>请思考，我们在按字节读和按字节写时，实际从 DM 获得的数据和向 DM 写入的数据是否是一字节？在什么情况下我们按字节读和按字节写的效率会高于按字读和按字写呢？</strong></p>
<p>在我们的实现方法中，CPU传入DM和从DM中直接获取的都是整个字（可能经过了特殊处理，但是长度仍然是32位）。<br>在一些需要连续以字节为单位进行访问的情况下按字节读写效率更高。比如C语言中遍历字符串，每个字符占1个字节，访问它的时候实际上只需要找这一个字节，此时再按字读写，找一个字节会连带着访问其附近三个暂时无用的字节空间，这样就会产生大量重复而没有意义的读写行为。</p>
</li>
<li><p><strong>为了对抗复杂性你采取了哪些抽象和规范手段？这些手段在译码和处理数据冲突的时候有什么样的特点与帮助？</strong></p>
<p>最重要的手段就是对指令进行抽象和归类，对于有相同行为的指令，只需要从总体和局部两个方面考虑，先统一完成分类内部的共同行为，再分别完成个别特殊行为，这样使得控制单元和冒险控制单元的代码量大大减小，可读性大大增强。代码的分类可以参见第一部分代码解析的相关内容。<br>举个例子：对于双寄存器运算类指令，解码代码片段如下：</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (cal_rr == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">    EXT_op = `EXT_default;</span><br><span class="line">    CMP_op = `CMP_default;</span><br><span class="line">    NPC_op = `<span class="keyword">continue</span>;</span><br><span class="line">    DM_op  = `DM_default;</span><br><span class="line">    MDU_start = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    GRF_WE = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    E_reg_D_WA_sel = `WA_rd;</span><br><span class="line">    W_GRF_WD_sel   = `WD_CAL_result;</span><br><span class="line">    E_CAL_B_sel    = `B_GRF_RD2;</span><br><span class="line"></span><br><span class="line">    CAL_op =    (func == `add)  ? `ALU_add  :</span><br><span class="line">                (func == `sub)  ? `ALU_sub  :</span><br><span class="line">                (func == `and_) ? `ALU_and  :</span><br><span class="line">                (func == `or_)  ? `ALU_or   :</span><br><span class="line">                (func == `slt)  ? `ALU_slt  :</span><br><span class="line">                (func == `sltu) ? `ALU_sltu :</span><br><span class="line">                                `CAL_default;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>此外，我还通过宏定义抽象编码（指令的识别码、选择信号的编码、各种运算符编码等），避免意义不明的数字出现。</p>
</li>
<li><p><strong>在本实验中你遇到了哪些不同指令类型组合产生的冲突？你又是如何解决的？相应的测试样例是什么样的？</strong></p>
<p>总体来说，大部分冲突都可以用A-T模型来解决，只需要保证实现了充分的转发和必要的暂停即可，具体实现策略前问有提到。<br>P6相对于P5增加的新的冲突类型就是涉及乘除槽的冲突，即乘除槽正在计算时D级出现涉及乘除槽的指令，解决方法上面有提到，就是增加了一条必要的暂停。<br>测试样例：</p>
<figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lui </span>$<span class="number">1</span> <span class="number">0x1234</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">2</span> <span class="number">0x5678</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">1</span> $<span class="number">1</span> <span class="number">0x90ab</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">2</span> $<span class="number">2</span> <span class="number">0xcdef</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mult </span>$<span class="number">1</span> $<span class="number">2</span>    <span class="comment"># 将mult改成multu、div、divu进行多次测试</span></span><br><span class="line"><span class="keyword">mthi </span>$<span class="number">3</span></span><br><span class="line"><span class="keyword">mflo </span>$<span class="number">4</span></span><br><span class="line"><span class="keyword">mfhi </span>$<span class="number">1</span></span><br><span class="line"><span class="keyword">mtlo </span>$<span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>如果你是手动构造的样例，请说明构造策略，说明你的测试程序如何保证覆盖了所有需要测试的情况；如果你是完全随机生成的测试样例，请思考完全随机的测试程序有何不足之处；如果你在生成测试样例时采用了特殊的策略，比如构造连续数据冒险序列，请你描述一下你使用的策略如何结合了随机性达到强测的效果。</strong></p>
<p>主要是手动构造，也借用了同学的自动测评软件。<br>构造的原则参考了课程组提供的覆盖率分析模型，即：在保证指令合法的前提下，尽可能全面覆盖所有可能的转发信息四元组和阻塞信息三元组。</p>
<ul>
<li><p><strong>阻塞级</strong>：若某流水级的指令未能产生新数据，导致 D 级被阻塞，则称该流水级为<strong>阻塞级</strong>。</p>
<blockquote>
<p>如下述阻塞现场中，E 级是阻塞级。</p>
<p><code>lw   $2, 0($0)    # &lt;-- E add  $1, $2, $2   # &lt;-- D</code></p>
</blockquote>
</li>
<li><p><strong>转发测试有效性</strong>：若某一个转发不发生时，仍能得到正确的结果，则认定此转发是<strong>测试无效</strong>的；反之认定为<strong>测试有效</strong>的。</p>
<blockquote>
<p>如下述指令序列是无效的，因为 <code>andi</code> 向 <code>beq</code> 转发的值为 <code>0</code>，与 <code>beq</code> 从 GRF 中取出的值是一致的，即便此转发不发生，<code>beq</code> 也能引发正确的转移，<strong>这说明此转发构造并未能够起到测试转发功能的作用</strong>：</p>
<p><code># 假设在此之前 $1 为 0x00000000 andi $1, $1, 0x1234 beq  $1, $0, lab nop add  $1, $1, $1 lab: sub  $1, $1, $1</code></p>
</blockquote>
</li>
<li><p><strong>转发信息四元组</strong>：针对每一个转发，我们抓取转发现场的 4 个信息：发射新数据的指令名、接受新数据的指令名、发射新数据的流水级、接受新数据的流水级。在分析中，称两个转发是不同的，当且仅当两个转发的 4 个信息中至少有一个不相同。</p>
</li>
<li><p><strong>阻塞信息三元组</strong>：针对每一个阻塞（不计乘除槽阻塞），我们抓取阻塞现场的 3 个信息：D 级指令名，阻塞级指令名，其中间隔的指令个数。在分析中，称两个阻塞是不同的，当且仅当两个阻塞的 3 个信息中至少有一个不相同。</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>BUAA_CO</category>
      </categories>
      <tags>
        <tag>BUAA</tag>
        <tag>CO_P6</tag>
      </tags>
  </entry>
  <entry>
    <title>BUAA_CO_P5_Document</title>
    <url>/2024/06/21/BUAA-CO-P5-Document/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<h1 id="简单流水线CPU设计文档"><a href="#简单流水线CPU设计文档" class="headerlink" title="简单流水线CPU设计文档"></a>简单流水线CPU设计文档</h1>
</blockquote>

<span id="more"></span>

<h2 id="1-设计草稿"><a href="#1-设计草稿" class="headerlink" title="1.设计草稿"></a>1.设计草稿</h2><h3 id="1-1-指令解析"><a href="#1-1-指令解析" class="headerlink" title="1.1.指令解析"></a>1.1.指令解析</h3><table>
<thead>
<tr>
<th align="center">instructions</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100000</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100010</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">hint</td>
<td align="center">001000</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">001101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">100011</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">101011</td>
<td align="center">base(rs)</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">000100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">001111</td>
<td align="center">00000</td>
<td align="center">rt</td>
<td align="center">imm16[15:11]</td>
<td align="center">imm16[10:6]</td>
<td align="center">imm16[5:0]</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">000011</td>
<td align="center">imm26[25:21]</td>
<td align="center">imm26[20:16]</td>
<td align="center">imm26[15:11]</td>
<td align="center">imm26[10:6]</td>
<td align="center">imm26[5:0]</td>
</tr>
<tr>
<td align="center">j</td>
<td align="center">000010</td>
<td align="center">imm26[25:21]</td>
<td align="center">imm26[20:16]</td>
<td align="center">imm26[15:11]</td>
<td align="center">imm26[10:6]</td>
<td align="center">imm26[5:0]</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">000000</td>
</tr>
</tbody></table>
<h3 id="1-2-数据通路"><a href="#1-2-数据通路" class="headerlink" title="1.2.数据通路"></a>1.2.数据通路</h3><ul>
<li>此处<strong>暂不考虑</strong>转发，需要转发的数据暂时用<code>(*)</code>标出，后续详细说明</li>
</ul>
<h4 id="1-2-1-稳定的连接"><a href="#1-2-1-稳定的连接" class="headerlink" title="1.2.1.稳定的连接"></a>1.2.1.稳定的连接</h4><ul>
<li><p>以下输入数据无论那条指令全部通用，即所有相关指令需要的数据来源均相同</p>
<table>
<thead>
<tr>
<th align="center">部件</th>
<th align="center">输入端口</th>
<th align="center">数据来源</th>
<th align="center">部件</th>
<th align="center">输入端口</th>
<th align="center">数据来源</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F_IFU</td>
<td align="center">NPC</td>
<td align="center">D_NPC_NPC</td>
<td align="center">E_ALU</td>
<td align="center">A</td>
<td align="center">E_reg_E_RD1（*）</td>
</tr>
<tr>
<td align="center">D_reg</td>
<td align="center">F_PC</td>
<td align="center">F_IFU_PC</td>
<td align="center">M_reg</td>
<td align="center">E_PC</td>
<td align="center">E_reg_E_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">F_IR</td>
<td align="center">F_IFU_instr</td>
<td align="center"></td>
<td align="center">E_WA</td>
<td align="center">E_reg_E_WA</td>
</tr>
<tr>
<td align="center">D_GRF[R]</td>
<td align="center">RA1</td>
<td align="center">D_reg_D_rs</td>
<td align="center"></td>
<td align="center">E_result</td>
<td align="center">E_ALU_result</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RA2</td>
<td align="center">D_reg_D_rt</td>
<td align="center"></td>
<td align="center">E_RD2</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">D_EXT</td>
<td align="center">in16</td>
<td align="center">D_reg_D_imm16</td>
<td align="center"></td>
<td align="center">E_E32</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">D_CMP</td>
<td align="center">A</td>
<td align="center">D_GRF_RD1（*）</td>
<td align="center">M_DM</td>
<td align="center">PC</td>
<td align="center">M_reg_M_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">D_GRF_RD2（*）</td>
<td align="center"></td>
<td align="center">A</td>
<td align="center">M_reg_M_result</td>
</tr>
<tr>
<td align="center">D_NPC</td>
<td align="center">PC</td>
<td align="center">D_reg_D_PC</td>
<td align="center"></td>
<td align="center">WD</td>
<td align="center">M_reg_M_RD2（*）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">judge</td>
<td align="center">D_CMP_result</td>
<td align="center">W_reg</td>
<td align="center">M_PC</td>
<td align="center">M_reg_M_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">offset</td>
<td align="center">D_reg_D_imm16</td>
<td align="center"></td>
<td align="center">M_WA</td>
<td align="center">M_reg_M_WA</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">tar_26</td>
<td align="center">D_reg_D_imm26</td>
<td align="center"></td>
<td align="center">M_result</td>
<td align="center">M_reg_M_result</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">tar_32</td>
<td align="center">D_GRF_RD1（*）</td>
<td align="center"></td>
<td align="center">M_RD</td>
<td align="center">M_DM_RD</td>
</tr>
<tr>
<td align="center">E_reg</td>
<td align="center">D_PC</td>
<td align="center">D_reg_D_PC</td>
<td align="center"></td>
<td align="center">M_E32</td>
<td align="center">M_reg_M_E32</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_RD1</td>
<td align="center">D_GRF_RD1</td>
<td align="center">W_GRF[W]</td>
<td align="center">PC</td>
<td align="center">W_reg_W_PC</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_RD2</td>
<td align="center">D_GRF_RD2</td>
<td align="center"></td>
<td align="center">WA</td>
<td align="center">W_reg_W_WA</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">D_E32</td>
<td align="center">D_CMP_out32</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-2-2-不稳定的连接"><a href="#1-2-2-不稳定的连接" class="headerlink" title="1.2.2.不稳定的连接"></a>1.2.2.不稳定的连接</h4><ul>
<li><p>以下数据在不同的有关指令下需要不同的数据来源，需要用多路选择器来实现</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">E_reg_D_WA</th>
<th align="center">W_GRF_WD</th>
<th align="center">E_ALU_B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">D_reg_D_rd</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">D_reg_D_rd</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_result</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_RD</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">E_reg_E_E32</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">E_reg_E_RD2（*）</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">D_reg_D_rt</td>
<td align="center">W_reg_W_E32</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">$ra</td>
<td align="center">W_reg_W_PC + 8</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="1-3-部件说明"><a href="#1-3-部件说明" class="headerlink" title="1.3.部件说明"></a>1.3.部件说明</h3><h4 id="1-3-1-F-IFU（取指令单元）"><a href="#1-3-1-F-IFU（取指令单元）" class="headerlink" title="1.3.1. F_IFU（取指令单元）"></a>1.3.1. F_IFU（取指令单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">en</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">使能信号，为0时冻结PC</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">次指令地址</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">本指令地址</td>
</tr>
<tr>
<td align="center">instr</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">本指令内容</td>
</tr>
</tbody></table>
<ul>
<li>包含程序计数器(PC)和指令存储器(IM)</li>
<li>地址范围：0x00003000 ~ 0x00006FFF</li>
<li>PC支持同步复位和暂停冻结</li>
</ul>
<h4 id="1-3-2-D-reg（D级流水线寄存器）"><a href="#1-3-2-D-reg（D级流水线寄存器）" class="headerlink" title="1.3.2. D_reg（D级流水线寄存器）"></a>1.3.2. D_reg（D级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">en</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">使能信号，为0时冻结D_reg</td>
</tr>
<tr>
<td align="center">F_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">F级传入的指令地址</td>
</tr>
<tr>
<td align="center">F_IR</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令内容</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">D级当前的指令地址</td>
</tr>
<tr>
<td align="center">D_rs</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[25:21]</td>
</tr>
<tr>
<td align="center">D_rt</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[20:16]</td>
</tr>
<tr>
<td align="center">D_rd</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[15:11]</td>
</tr>
<tr>
<td align="center">D_imm16</td>
<td align="center">Out</td>
<td align="center">[15: 0]</td>
<td align="center">instr[15: 0]</td>
</tr>
<tr>
<td align="center">D_imm26</td>
<td align="center">Out</td>
<td align="center">[25: 0]</td>
<td align="center">instr[25: 0]</td>
</tr>
<tr>
<td align="center">D_opcode</td>
<td align="center">Out</td>
<td align="center">[ 5: 0]</td>
<td align="center">instr[31:26]</td>
</tr>
<tr>
<td align="center">D_func</td>
<td align="center">Out</td>
<td align="center">[ 5: 0]</td>
<td align="center">instr[ 5: 0]</td>
</tr>
</tbody></table>
<ul>
<li>支持同步复位和暂停冻结</li>
</ul>
<h4 id="1-3-3-D-GRF-R-（通用寄存器组读取部分）"><a href="#1-3-3-D-GRF-R-（通用寄存器组读取部分）" class="headerlink" title="1.3.3. D_GRF[R]（通用寄存器组读取部分）"></a>1.3.3. D_GRF[R]（通用寄存器组读取部分）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">RA1</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD1</td>
</tr>
<tr>
<td align="center">RA2</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD2</td>
</tr>
<tr>
<td align="center">RD1</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出1</td>
</tr>
<tr>
<td align="center">RD2</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出2</td>
</tr>
</tbody></table>
<ul>
<li><p>包含32个寄存器（0到31号），具有<strong>同步复位</strong>功能。</p>
</li>
<li><p><strong>0 号寄存器</strong>的值始终保持为 0。其他寄存器<strong>初始值（复位后）均为 0</strong>。</p>
</li>
<li><p>支持内部转发功能（相当于W级到D级的转发）</p>
</li>
<li><p>此处的说明仅限于通用寄存器的读取功能，写入功能在最后的W级说明</p>
</li>
</ul>
<h4 id="1-3-4-D-EXT（扩展单元）"><a href="#1-3-4-D-EXT（扩展单元）" class="headerlink" title="1.3.4. D_EXT（扩展单元）"></a>1.3.4. D_EXT（扩展单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">16bitIn</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">待扩展的16位数据</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">指示扩展方法</td>
</tr>
<tr>
<td align="center">32bitOut</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">扩展后的32位数据</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">operation</th>
</tr>
</thead>
<tbody><tr>
<td align="center">零拓展</td>
<td align="center">00</td>
</tr>
<tr>
<td align="center">符号拓展</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">将数据加载至高16位</td>
<td align="center">10</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-5-D-CMP（比较逻辑单元）"><a href="#1-3-5-D-CMP（比较逻辑单元）" class="headerlink" title="1.3.5. D_CMP（比较逻辑单元）"></a>1.3.5. D_CMP（比较逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">操作数2</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较标准编号</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">是否满足比较标准</td>
</tr>
</tbody></table>
<h4 id="1-3-6-D-NPC（次地址计算单元）"><a href="#1-3-6-D-NPC（次地址计算单元）" class="headerlink" title="1.3.6. D_NPC（次地址计算单元）"></a>1.3.6. D_NPC（次地址计算单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">F级刚取出的指令地址</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">流水到D级的指令地址</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">计算次地址的方法编号</td>
</tr>
<tr>
<td align="center">judge</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">相对跳转指令的条件是否成立</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">[15: 0]</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">tar_26</td>
<td align="center">In</td>
<td align="center">[25: 0]</td>
<td align="center">绝对跳转的目的地址（26位立即数）</td>
</tr>
<tr>
<td align="center">tar_32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">绝对跳转的目的地址（寄存器值）</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">次指令地址</td>
</tr>
</tbody></table>
<ul>
<li>现在有四种跳转方法，如下表：</li>
</ul>
<table>
<thead>
<tr>
<th align="center">operation</th>
<th align="center">说明</th>
<th align="center">NPC</th>
</tr>
</thead>
<tbody><tr>
<td align="center">00</td>
<td align="center">顺序执行</td>
<td align="center">$PC + 4$</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">相对跳转（偏移量为16位立即数）</td>
<td align="center">$PC + 4 + offset |0^2$</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">绝对跳转（目的地址为26位立即数）</td>
<td align="center">$PC[31,28]|tar_26|0^2$</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">绝对跳转（目的地址来自寄存器）</td>
<td align="center">$tar_32$</td>
</tr>
</tbody></table>
<h4 id="1-3-7-D-CU（控制单元）"><a href="#1-3-7-D-CU（控制单元）" class="headerlink" title="1.3.7. D_CU（控制单元）"></a>1.3.7. D_CU（控制单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">EXT_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">拓展方法编号</td>
</tr>
<tr>
<td align="center">CMP_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">逻辑运算比较标准编号</td>
</tr>
<tr>
<td align="center">NPC_op</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">计算次地址的方法编号</td>
</tr>
<tr>
<td align="center">ALU_op</td>
<td align="center">Out</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_reg_D_WA_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入地址选择信号</td>
</tr>
<tr>
<td align="center">W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
</tbody></table>
<ul>
<li><p>本模块根据输入的指令的不同，产生不同的控制信号。</p>
</li>
<li><p>下表列举了选则信号的编码与对应数据的关系：</p>
<table>
<thead>
<tr>
<th align="center">E_reg_D_WA_sel</th>
<th align="center"></th>
<th align="center">W_GRF_WD_sel</th>
<th align="center"></th>
<th align="center">ALU_B_slt</th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
</tr>
<tr>
<td align="center">00</td>
<td align="center">rd</td>
<td align="center">00</td>
<td align="center">ALU_result</td>
<td align="center">0</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">rt</td>
<td align="center">01</td>
<td align="center">DM_RD</td>
<td align="center">1</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">$ra</td>
<td align="center">10</td>
<td align="center">EXT_32bitOut</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">11</td>
<td align="center">IFU_PC8</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
<li><p>IFU_op, ALU_op, EXT_op : 见部件说明的相关部分</p>
</li>
</ul>
<h5 id="指令对应输出"><a href="#指令对应输出" class="headerlink" title="指令对应输出"></a>指令对应输出</h5><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">IFU_op</th>
<th align="center">GRF_WE</th>
<th align="center">ALU_op</th>
<th align="center">DM_WE</th>
<th align="center">EXT_op</th>
<th align="center">GRF_WA_slt</th>
<th align="center">GRF_WD_slt</th>
<th align="center">ALU_B_slt</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">sub</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">or_</td>
<td align="center">0</td>
<td align="center">zero_ext</td>
<td align="center">01</td>
<td align="center">00</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">sign_ext</td>
<td align="center">01</td>
<td align="center">01</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">continue</td>
<td align="center">0</td>
<td align="center">add</td>
<td align="center">1</td>
<td align="center">sign_ext</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">branch</td>
<td align="center">0</td>
<td align="center">equal</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">high_ext</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">jump</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">10</td>
<td align="center">11</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">jumpRegister</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h4 id="1-3-8-HCU（冒险控制单元）"><a href="#1-3-8-HCU（冒险控制单元）" class="headerlink" title="1.3.8. HCU（冒险控制单元）"></a>1.3.8. HCU（冒险控制单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">[ 5: 0]</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">rs</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[25:21]</td>
</tr>
<tr>
<td align="center">rt</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[20:16]</td>
</tr>
<tr>
<td align="center">rd</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">instr[15:11]</td>
</tr>
<tr>
<td align="center">stall</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">暂停指示信号</td>
</tr>
<tr>
<td align="center">E_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">D_NPC_tar_32_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">NPC绝对跳转目的地址选择信号</td>
</tr>
<tr>
<td align="center">D_CMP_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_CMP_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">比较单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">M_reg_E_RD2_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-9-E-reg（E级流水线寄存器）"><a href="#1-3-9-E-reg（E级流水线寄存器）" class="headerlink" title="1.3.9. E_reg（E级流水线寄存器）"></a>1.3.9. E_reg（E级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">clr</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">清空信号，用于插入气泡</td>
</tr>
<tr>
<td align="center">D_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">D级传入的指令地址</td>
</tr>
<tr>
<td align="center">D_RD1</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第一个寄存器的内容</td>
</tr>
<tr>
<td align="center">D_RD2</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">D_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">D_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">D_H_E_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">D_H_E_ALU_A_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_E_ALU_B_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_reg_E_RD2_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_DM_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">D_ALU_op</td>
<td align="center">In</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">D_DM_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">D_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">D_E_ALU_B_sel</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">E_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">E级当前的指令地址</td>
</tr>
<tr>
<td align="center">E_RD1</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第一个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_RD2</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">E_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">E_H_E_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">E_H_E_ALU_A_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第一个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_H_E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">运算单元第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">D_H_M_reg_E_RD2_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入M级，即将存入DM的数据选择信号</td>
</tr>
<tr>
<td align="center">E_H_M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">E_ALU_op</td>
<td align="center">Out</td>
<td align="center">[ 2: 0]</td>
<td align="center">数值运算的运算符编号</td>
</tr>
<tr>
<td align="center">E_DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">E_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_E_ALU_B_sel</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">数值计算第二个操作数选择信号</td>
</tr>
<tr>
<td align="center">E_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-10-E-ALU（算术逻辑单元）"><a href="#1-3-10-E-ALU（算术逻辑单元）" class="headerlink" title="1.3.10. E_ALU（算术逻辑单元）"></a>1.3.10. E_ALU（算术逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数2</td>
</tr>
<tr>
<td align="center">op</td>
<td align="center">In</td>
<td align="center">3</td>
<td align="center">运算符选择</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数值运算结果</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">result</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加（无符号运算，不考虑溢出）</td>
<td align="center">000</td>
<td align="center">$A + B [31,0]$</td>
</tr>
<tr>
<td align="center">减（无符号运算，不考虑溢出）</td>
<td align="center">001</td>
<td align="center">$A - B [31,0]$</td>
</tr>
<tr>
<td align="center">按位或</td>
<td align="center">010</td>
<td align="center">$A | B$</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-11-M-reg（M级流水线寄存器）"><a href="#1-3-11-M-reg（M级流水线寄存器）" class="headerlink" title="1.3.11. M_reg（M级流水线寄存器）"></a>1.3.11. M_reg（M级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">E_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">E级传入的指令地址</td>
</tr>
<tr>
<td align="center">E_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">E_result</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">E_RD2</td>
<td align="center">In</td>
<td align="center">[31: 1]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">E_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">E_H_E_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">E级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">E_H_M_DM_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">E_DM_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">E_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">E_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">M_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">M级当前的指令地址</td>
</tr>
<tr>
<td align="center">M_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">M_result</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">M_RD2</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">读取到的第二个寄存器的内容</td>
</tr>
<tr>
<td align="center">M_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">M_H_M_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">M级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">M_H_M_DM_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">存入内存的数据选择信号</td>
</tr>
<tr>
<td align="center">M_DM_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">内存写使能信号</td>
</tr>
<tr>
<td align="center">M_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">M_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-12-M-DM（数据存储器）"><a href="#1-3-12-M-DM（数据存储器）" class="headerlink" title="1.3.12. M_DM（数据存储器）"></a>1.3.12. M_DM（数据存储器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令地址</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">输入存取数据的地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">数据输出</td>
</tr>
</tbody></table>
<ul>
<li><strong>起始地址：0x00000000</strong>。</li>
<li>地址范围：0x00000000 ~ 0x00002FFF。</li>
</ul>
<h4 id="1-3-13-W-reg（W级流水线寄存器）"><a href="#1-3-13-W-reg（W级流水线寄存器）" class="headerlink" title="1.3.13. W_reg（W级流水线寄存器）"></a>1.3.13. W_reg（W级流水线寄存器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">M_PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">M级输入的指令地址</td>
</tr>
<tr>
<td align="center">M_WA</td>
<td align="center">In</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">M_result</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">M_RD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">DM中取出的数值</td>
</tr>
<tr>
<td align="center">M_E32</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">M_H_M_out_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">M级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">M_GRF_WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">M_W_GRF_WD_sel</td>
<td align="center">In</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
<tr>
<td align="center">W_PC</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">W级当前的指令地址</td>
</tr>
<tr>
<td align="center">W_WA</td>
<td align="center">Out</td>
<td align="center">[ 4: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">W_result</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">ALU的数值运算结果</td>
</tr>
<tr>
<td align="center">W_RD</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">DM中取出的数值</td>
</tr>
<tr>
<td align="center">W_E32</td>
<td align="center">Out</td>
<td align="center">[31: 0]</td>
<td align="center">EXT的32位拓展结果</td>
</tr>
<tr>
<td align="center">W_H_W_out_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">W级寄存器转发输出选择信号</td>
</tr>
<tr>
<td align="center">W_GRF_WE</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">寄存器堆写使能信号</td>
</tr>
<tr>
<td align="center">W_W_GRF_WD_sel</td>
<td align="center">Out</td>
<td align="center">[ 1: 0]</td>
<td align="center">寄存器写入内容选择信号</td>
</tr>
</tbody></table>
<h4 id="1-3-14-W-GRF-W-通用寄存器组读取部分"><a href="#1-3-14-W-GRF-W-通用寄存器组读取部分" class="headerlink" title="1.3.14. W_GRF[W] (通用寄存器组读取部分)"></a>1.3.14. W_GRF[W] (通用寄存器组读取部分)</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">当前指令地址</td>
</tr>
<tr>
<td align="center">WA</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">需要写入的寄存器的地址</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">[31: 0]</td>
<td align="center">需要写入寄存器的内容</td>
</tr>
</tbody></table>
<h3 id="1-4-冒险控制"><a href="#1-4-冒险控制" class="headerlink" title="1.4. 冒险控制"></a>1.4. 冒险控制</h3><ul>
<li>这部分主要对流水线冒险的控制进行分析，功能由HCU( <strong>Hazard Control Unit</strong>)实现</li>
</ul>
<h4 id="1-4-1-暂停（Stall）"><a href="#1-4-1-暂停（Stall）" class="headerlink" title="1.4.1. 暂停（Stall）"></a>1.4.1. 暂停（Stall）</h4><ul>
<li><p>在本CPU设计中，暂停作为一种不得已而为之的手段，尽可能少使用，所有数据冒险的解决以转发为主，只有转发完全无法解决问题时才采用暂停</p>
</li>
<li><p>下面基于<strong>A-T法</strong>进行分析</p>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">$T^{rs}_{use}$</th>
<th align="center">$T^{rt}_{use}$</th>
<th align="center">包含的指令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">cal_R</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">add, sub</td>
</tr>
<tr>
<td align="center">cal_I</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">ori</td>
</tr>
<tr>
<td align="center">load</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">lw</td>
</tr>
<tr>
<td align="center">store</td>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">sw</td>
</tr>
<tr>
<td align="center">branch</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">beq</td>
</tr>
<tr>
<td align="center">jumpReg</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">jr</td>
</tr>
<tr>
<td align="center">others</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">lui, jal</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">{0, 1}</td>
<td align="center">{0, 1, 2}</td>
<td align="center"></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">$T_{new}$ 初始值</th>
<th align="center">包含指令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">运算类</td>
<td align="center">1</td>
<td align="center">add, sub, ori</td>
</tr>
<tr>
<td align="center">读取内存类</td>
<td align="center">2</td>
<td align="center">lw</td>
</tr>
<tr>
<td align="center">函数调用类</td>
<td align="center">0</td>
<td align="center">jal</td>
</tr>
<tr>
<td align="center">无新数据产生</td>
<td align="center">&#x2F;</td>
<td align="center">beq, lui, sw, jr</td>
</tr>
</tbody></table>
</li>
</ul>
<p>暂停（S）与转发（F）策略矩阵：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$E_T_{new}&#x3D;2$</th>
<th align="center">$E_T_{new}&#x3D;1$</th>
<th align="center">$E_T_{new}&#x3D;0$</th>
<th align="center">$M_T_{new}&#x3D;1$</th>
<th align="center">$M_T_{new}&#x3D;0$</th>
<th align="center">$W_T_{new}&#x3D;0$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$T_{use} &#x3D; 0$</td>
<td align="center">S</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
<tr>
<td align="center">$T_{use} &#x3D; 1$</td>
<td align="center">S</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
<tr>
<td align="center">$T_{use} &#x3D; 2$</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
<td align="center">F</td>
</tr>
</tbody></table>
<ul>
<li>这里具体实现时，一方面要对每一条指令分析并及时更新当前 $T^{rs}<em>{use}$  和  $T^{rt}</em>{use}$，另一方面要在冒险控制单元中加入两个寄存器，分别记录 $E_T_{new}$， $M_T_{new}$，然后根据当前指令更新前者，并根据前者的原值更新后者。 $W_T_{new}$一定为0不需要考虑</li>
<li>此外还需要用两个寄存器记录当前E，M级寄存器准备写入通用寄存器的数据的地址，这个数据在暂停和转发的判断时都会用到。这两个寄存器在每个指令进入HCU时（此时指令处于D级）进行更新，如果指令不涉及通用寄存器，就将对应的变量设置为0，在转发和暂停时进行判断，为0则可以忽略。另外需要在触发暂停时在<code>WA_E</code>插入气泡（即全零）避免出现奇怪的问题</li>
</ul>
<h4 id="1-4-2-转发（Forward）"><a href="#1-4-2-转发（Forward）" class="headerlink" title="1.4.2. 转发（Forward）"></a>1.4.2. 转发（Forward）</h4><ul>
<li><p>需要被转发的数据一定是即将存入通用寄存器的数据</p>
</li>
<li><p>转发数据的起始端只能在E，M，W三级的寄存器的输出处，其中D级需要的数据不需要考虑从W级寄存器发出，因为GRF实现了内部转发</p>
<p> E，M，W三级的寄存器的输出处设置MUX以选择输出的信号</p>
<table>
<thead>
<tr>
<th align="center">MUX</th>
<th align="center">Data1</th>
<th align="center">Data2</th>
<th align="center">Data3</th>
<th align="center">Data4</th>
</tr>
</thead>
<tbody><tr>
<td align="center">E_out</td>
<td align="center">E_PC + 8</td>
<td align="center">E_E32</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">M_out</td>
<td align="center">M_PC + 8</td>
<td align="center">M_E32</td>
<td align="center">M_result</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">W_out</td>
<td align="center">W_PC + 8</td>
<td align="center">W_E32</td>
<td align="center">W_result</td>
<td align="center">W_RD</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">00</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">11</td>
</tr>
</tbody></table>
<p> 这里HCU只需要计算并输出E_out_sel，其余两级直接流水即可</p>
</li>
<li><p>用到转发的接收端有：</p>
<table>
<thead>
<tr>
<th align="center">元件</th>
<th align="center">输入端口</th>
<th align="center">来源1</th>
<th align="center">来源2</th>
<th align="center">来源3</th>
</tr>
</thead>
<tbody><tr>
<td align="center">D_NPC</td>
<td align="center">tar_32</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD1</td>
</tr>
<tr>
<td align="center">D_CMP</td>
<td align="center">A</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD1</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">E_out</td>
<td align="center">M_out</td>
<td align="center">D_GRF_RD2</td>
</tr>
<tr>
<td align="center">E_ALU</td>
<td align="center">A</td>
<td align="center">M_out</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD1</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">B</td>
<td align="center">M_out</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD2</td>
</tr>
<tr>
<td align="center">M_reg</td>
<td align="center">E_RD2</td>
<td align="center">W_out</td>
<td align="center">E_reg_E_RD2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">M_DM</td>
<td align="center">WD</td>
<td align="center">W_out</td>
<td align="center">M_reg_M_RD2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">11</td>
</tr>
</tbody></table>
<p>此处优先级：来源1 &gt; 来源2 &gt; 来源3，即越后产生的数据越“新鲜”，越优先</p>
</li>
<li><p>因为DM（所有存储指令）用数据用的太晚，两条前的数据会丢失，所以需要在指令进入M级时增加一条转发路径（即倒数第二条）。</p>
</li>
<li><p>GRF内部转发单独考虑（在WE有效且RA不为0时使用内部转发）</p>
</li>
</ul>
<h2 id="2-测试方案"><a href="#2-测试方案" class="headerlink" title="2. 测试方案"></a>2. 测试方案</h2><ul>
<li><p>考虑数据的各种情况，编写测试数据，用Mars汇编为机器码导入CPU并进行对拍，测试各个功能模块的正确性。</p>
</li>
<li><p>考虑冒险的各种情况，编写测试数据并利用助教提供的工具进行覆盖率检查，用覆盖率较高的数据进行测试。</p>
</li>
<li><p>另附代码：</p>
</li>
</ul>
<h3 id="功能模块测试代码"><a href="#功能模块测试代码" class="headerlink" title="功能模块测试代码"></a>功能模块测试代码</h3><figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ori &amp; lui </span></span><br><span class="line"><span class="comment"># 考虑原本有值的寄存器、没有值的寄存器、恒为零的$0，以及立即数的正、负、零</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> <span class="number">0x1111</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> $<span class="built_in">t1</span> <span class="number">0x4444</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t3</span> $<span class="built_in">t2</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t3</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">zero</span> $<span class="built_in">t4</span> <span class="number">0x2341</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t3</span> <span class="number">0x2233</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t2</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t9</span> <span class="number">0x4567</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">zero</span> <span class="number">0xffff</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add &amp; sub  </span></span><br><span class="line"><span class="comment"># 考虑相同寄存器之间、不同寄存器之间；正数、负数、零之间的加减</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> <span class="number">0x4321</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t3</span> $<span class="built_in">t1</span> $<span class="built_in">t2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xfeda</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t4</span> <span class="number">0x5678</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t5</span> $<span class="built_in">t4</span> $<span class="built_in">t3</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t6</span> $<span class="built_in">t5</span> $<span class="built_in">t4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t7</span> <span class="number">0x7777</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t7</span> $<span class="built_in">t7</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t8</span> $<span class="built_in">t7</span> $<span class="built_in">t6</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t9</span> $<span class="built_in">t7</span> $<span class="built_in">t3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> <span class="number">0x4321</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t3</span> $<span class="built_in">t1</span> $<span class="built_in">t2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xfeda</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t4</span> <span class="number">0x5678</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t5</span> $<span class="built_in">t4</span> $<span class="built_in">t3</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t6</span> $<span class="built_in">t5</span> $<span class="built_in">t4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t7</span> <span class="number">0x7777</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t7</span> $<span class="built_in">t7</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t8</span> $<span class="built_in">t7</span> $<span class="built_in">t6</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t9</span> $<span class="built_in">t7</span> $<span class="built_in">t3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lw &amp; sw </span></span><br><span class="line"><span class="comment"># 考虑base、offset分别的正负零情形，但是总体上加和需要保证大于等于零</span></span><br><span class="line"><span class="comment"># 考虑写入时目标地址不为0的情形和读取时目标寄存器为$0的情形</span></span><br><span class="line">    <span class="comment"># base == 0 &amp;&amp; offset &gt;= 0</span></span><br><span class="line">    <span class="comment"># the target register maybe $0</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0xafdc</span> </span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0010</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0110</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t0</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0010</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> <span class="number">0x0110</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">zero</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base &lt; 0 &amp;&amp; offset &gt; 0</span></span><br><span class="line">    <span class="comment"># the place to store maybe already occupied</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0xafdc</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0010</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0010</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0110</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0010</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> <span class="number">0x0110</span>($<span class="built_in">t0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base &gt; 0</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0x0066</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0xccff</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0100</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0000</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> -<span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> -<span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0000</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> -<span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t3</span> -<span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t4</span> <span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t5</span> <span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># beq (&amp; nop)</span></span><br><span class="line"><span class="comment"># 考虑是否需要跳转和offset的正负零情况</span></span><br><span class="line"><span class="comment"># 这段代码最后会卡在跳转到自身的指令不再向下进行</span></span><br><span class="line"><span class="symbol">    label0:</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s1</span> $<span class="built_in">s1</span> <span class="number">0x5678</span></span><br><span class="line"><span class="symbol">    label1:</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label1</span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label2</span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label0</span><br><span class="line"><span class="symbol">    label2:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t0</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">zero</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s1</span> $<span class="built_in">zero</span> <span class="number">0x1234</span></span><br><span class="line"><span class="symbol">    label3:</span></span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">beq </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> label4</span><br><span class="line"><span class="symbol">    label5:</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label5</span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span><span class="symbol">    label4:</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t0</span> $<span class="built_in">t0</span> $<span class="built_in">s0</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label3</span><br><span class="line"></span><br><span class="line"><span class="comment"># jal</span></span><br><span class="line"><span class="comment"># 考虑向前、向后、向自己跳转，但是向自己跳转的指令需要单独测试</span></span><br><span class="line"><span class="symbol">    tar0:</span></span><br><span class="line">    <span class="keyword">jal </span>tar1</span><br><span class="line"><span class="symbol">    tar1:</span></span><br><span class="line">    <span class="keyword">jal </span>tar0</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">    tar2:</span></span><br><span class="line">    <span class="keyword">jal </span>tar2</span><br><span class="line"></span><br><span class="line"><span class="comment"># jr</span></span><br><span class="line"><span class="comment"># 考虑向前、向后、向自己跳转，但是向自己跳转的指令需要单独测试</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x300c</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">ori </span>$<span class="built_in">t1</span> <span class="number">0x3000</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="built_in">t1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x3004</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="built_in">t0</span></span><br></pre></td></tr></table></figure>

<h3 id="涉及目前所有需要暂停的冲突的指令序列"><a href="#涉及目前所有需要暂停的冲突的指令序列" class="headerlink" title="涉及目前所有需要暂停的冲突的指令序列"></a>涉及目前所有需要暂停的冲突的指令序列</h3><figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lui </span>$<span class="number">1</span> <span class="number">0x1234</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">1</span> <span class="number">0x5678</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">2</span> <span class="number">0x2345</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">2</span> <span class="number">0x6789</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">3</span> <span class="number">0x3456</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">3</span> <span class="number">0x7890</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">4</span> <span class="number">0x4567</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">4</span> <span class="number">0x890a</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">5</span> <span class="number">0x5678</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">5</span> <span class="number">0x90ab</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">6</span> <span class="number">0x6789</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">6</span> <span class="number">0x0abc</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">7</span> <span class="number">0x7890</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">7</span> <span class="number">0xabcd</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">8</span> <span class="number">0x890a</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">8</span> <span class="number">0xbcde</span></span><br><span class="line"><span class="keyword">lui </span>$<span class="number">9</span> <span class="number">0x90ab</span></span><br><span class="line"><span class="keyword">ori </span>$<span class="number">9</span> <span class="number">0xcdef</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 1 &quot;jr &lt;~~ load&quot;</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="number">13</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">13</span> $<span class="number">13</span> <span class="number">0x3064</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">13</span> <span class="number">4</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">10</span> <span class="number">4</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">jr </span>$<span class="number">10</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">14</span> $<span class="number">1</span> $<span class="number">2</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">5</span> $<span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 2 &quot;jr &lt;~~ cal_rr&quot;</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="number">13</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">13</span> $<span class="number">13</span> <span class="number">0x3080</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">10</span> $<span class="number">0</span> $<span class="number">13</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="number">10</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">14</span> $<span class="number">1</span> $<span class="number">2</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">5</span> $<span class="number">6</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="number">13</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">13</span> $<span class="number">13</span> <span class="number">0x309c</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="number">10</span> $<span class="number">13</span> $<span class="number">0</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="number">10</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">14</span> $<span class="number">1</span> $<span class="number">2</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">5</span> $<span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 3 &quot;jr &lt;~~ cal_ri&quot;</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="number">13</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">13</span> $<span class="number">13</span> <span class="number">0x30b4</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="number">13</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">14</span> $<span class="number">1</span> $<span class="number">2</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">15</span> $<span class="number">5</span> $<span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 4 &quot;cal_rr &lt;~~ load&quot;</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">1</span> <span class="number">0</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">2</span> <span class="number">4</span>($<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">10</span> <span class="number">0</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">add </span>$<span class="number">12</span> $<span class="number">10</span> $<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">13</span> <span class="number">0</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">sub </span>$<span class="number">14</span> $<span class="number">13</span> $<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 5 &quot;cal_ri &lt;~~ load&quot;</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">1</span> <span class="number">0</span>($<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">10</span> <span class="number">0</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">12</span> $<span class="number">10</span> <span class="number">0x1234</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 6 &quot;br_r2 &lt;~~ cal_rr&quot;</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">10</span> $<span class="number">1</span> $<span class="number">2</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="number">10</span> $<span class="number">0</span> yes1</span><br><span class="line">    <span class="keyword">sub </span>$<span class="number">12</span> $<span class="number">5</span> $<span class="number">6</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="number">11</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line"><span class="symbol">    yes1:</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="number">10</span> $<span class="number">3</span> $<span class="number">3</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="number">10</span> $<span class="number">0</span> yes2</span><br><span class="line">    <span class="keyword">add </span>$<span class="number">11</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="number">12</span> $<span class="number">5</span> $<span class="number">6</span></span><br><span class="line"><span class="symbol">    yes2:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 7 &quot;br_r2 &lt;~~ cal_ri&quot;</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">10</span> $<span class="number">1</span> <span class="number">0x6543</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="number">10</span> $<span class="number">0</span> yes3</span><br><span class="line">    <span class="keyword">add </span>$<span class="number">11</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line"><span class="symbol">    yes3:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 8 &quot;br_r2 &lt;~~ load&quot;</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">3</span> <span class="number">16</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">10</span> <span class="number">16</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">beq </span>$<span class="number">10</span> $<span class="number">0</span> yes4</span><br><span class="line">    <span class="keyword">add </span>$<span class="number">11</span> $<span class="number">3</span> $<span class="number">4</span></span><br><span class="line"><span class="symbol">    yes4:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 9 &quot;load &lt;~~ load&quot;</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">10</span> $<span class="number">0</span> <span class="number">0x0100</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">10</span> <span class="number">16</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">10</span> <span class="number">16</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">12</span> <span class="number">0</span>($<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># stall 10 &quot;store &lt;~~ load&quot;</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="number">10</span> $<span class="number">0</span> <span class="number">0x0100</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">10</span> <span class="number">16</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="number">10</span> <span class="number">16</span>($<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="number">4</span> <span class="number">0</span>($<span class="number">10</span>)</span><br></pre></td></tr></table></figure>

<h2 id="3-思考题"><a href="#3-思考题" class="headerlink" title="3. 思考题"></a>3. 思考题</h2><ol>
<li><p><strong>我们使用提前分支判断的方法尽早产生结果来减少因不确定而带来的开销，但实际上这种方法并非总能提高效率，请从流水线冒险的角度思考其原因并给出一个指令序列的例子。</strong></p>
<p>提前分支判断和延迟槽的实现有效地规避了控制冒险，但是因为把分支类指令的$T^{rs}_{use}$从1变为了0而造成了额外的数据冒险（前一条为运算类；前两条之一为读取内存类时）。</p>
<p>例子：</p>
<figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add </span>$<span class="built_in">t1</span> $<span class="built_in">t2</span> $<span class="built_in">t3</span></span><br><span class="line"><span class="keyword">beq </span>$<span class="built_in">t1</span> $<span class="built_in">t4</span> label</span><br><span class="line"><span class="comment"># something else</span></span><br><span class="line"><span class="comment"># something else</span></span><br><span class="line"><span class="symbol">label:</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>因为延迟槽的存在，对于 jal 等需要将指令地址写入寄存器的指令，要写回 PC + 8，请思考为什么这样设计？</strong><br>首先，延迟槽是为了规避控制冒险，而回写<strong>PC + 8</strong> 则是因为延迟槽内的指令必然已经被执行，返回是只需要从延迟槽之后一行开始执行即可。</p>
</li>
<li><p><strong>我们要求大家所有转发数据都来源于流水寄存器而不能是功能部件（如 DM 、 ALU ），请思考为什么？</strong></p>
<ol>
<li>流水寄存器在每一个时钟周期内的输出是稳定的，不会出现延迟和变化等，而功能部件产生有效数据的时间会有延迟，直接转发可能导致存储错误的数据</li>
<li>如果希望用功能部件产生的，最终有效的数据进行转发，关键路径会被延长，因此最短时钟周期就会延长，拖慢整体效率，而从流水寄存器出发的转发可以与本级操作并行，对缩短周期更有利</li>
<li>这样设计更加整齐，可以以时钟周期为基本单位进行思考，降低了设计过程中的思维难度，也让设计变得更加清晰</li>
</ol>
</li>
<li><p><strong>我们为什么要使用 GPR 内部转发？该如何实现？</strong></p>
<p>使用内部转发是为了避免W级到D级的外部转发，同时也让每条指令只需要考虑前面两条指令的写入数据是否与自己的读取数据相一致，而不必再向前比较一条。<br>实现方法大致是：读取寄存器时，首先判断目的地址是否为0，如果是直接输出32’b0；如果不是再判断当前写入地址与读取地址一致且写使能信号有效，如果成立则直接将写入信号连接至读取信号，否则正常读取。<br>具体实现代码片段如下：</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">   <span class="keyword">assign</span> RD1 = (RA1 == <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> :</span><br><span class="line">             (WE == <span class="number">1&#x27;b1</span> &amp;&amp; WA == RA1) ? WD : GPR[RA1];</span><br><span class="line"><span class="keyword">assign</span> RD2 = (RA2 == <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> :</span><br><span class="line">             (WE == <span class="number">1&#x27;b1</span> &amp;&amp; WA == RA2) ? WD : GPR[RA2];</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>我们转发时数据的需求者和供给者可能来源于哪些位置？共有哪些转发数据通路？</strong></p>
<p>转发数据的起始端只能在E，M，W三级的寄存器的输出处，其中D级需要的数据不需要考虑从W级寄存器发出，因为GRF实现了内部转发</p>
<p>转发数据的需求端包括D_NPC(tar_32), D_CMP(A, B), E_ALU(A, B), M_reg(E_RD2), M_DM(WD)</p>
<p>详细的转发数据通路在上文设计草稿中有记录</p>
</li>
<li><p><strong>在课上测试时，我们需要你现场实现新的指令，对于这些新的指令，你可能需要在原有的数据通路上做哪些扩展或修改？</strong><br><strong>提示：你可以对指令进行分类，思考每一类指令可能修改或扩展哪些位置。</strong></p>
<p>首先需要修改CU使得新指令可以被读取，然后涉及到新运算的指令修改ALU，涉及到新比较方法的指令修改CMP，如果新指令使得新的数据端口需要通用寄存器的值，还需要增加转发选择器，此外根据上文暂停部分的指令分类，对T_new, T_use进行分析，增加暂停的判断。</p>
</li>
<li><p><strong>确定你的译码方式，简要描述你的译码器架构，并思考该架构的优势以及不足。</strong></p>
<p>我采用的是集中式译码，把CU和HCU都作为D级部件，所有的指令在D级被拆分，生成功能控制信号和冒险控制信号，并逐级向下传递，优势在于只需要实例化一次控制元件，而且控制信号的流动比较简单，不用逐级传递指令；但是需要流水的控制信号很多，在端口设置和接线上略有麻烦</p>
</li>
</ol>
<h2 id="附录：分析过程表格（涉及部件功能定义和数据通路，其中相同类型的数据端口用相同颜色标出）"><a href="#附录：分析过程表格（涉及部件功能定义和数据通路，其中相同类型的数据端口用相同颜色标出）" class="headerlink" title="附录：分析过程表格（涉及部件功能定义和数据通路，其中相同类型的数据端口用相同颜色标出）"></a>附录：分析过程表格（涉及部件功能定义和数据通路，其中相同类型的数据端口用相同颜色标出）</h2><p><img src="/appendix/BUAA-CO-P5/analysis.png" alt="图片链接"></p>
]]></content>
      <categories>
        <category>BUAA_CO</category>
      </categories>
      <tags>
        <tag>BUAA</tag>
        <tag>CO_P5</tag>
      </tags>
  </entry>
  <entry>
    <title>BUAA_CO_P4_Document</title>
    <url>/2024/06/21/BUAA-CO-P4-Document/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<h1 id="单周期CPU设计文档"><a href="#单周期CPU设计文档" class="headerlink" title="单周期CPU设计文档"></a>单周期CPU设计文档</h1>
</blockquote>

<span id="more"></span>

<h2 id="1-设计草稿"><a href="#1-设计草稿" class="headerlink" title="1.设计草稿"></a>1.设计草稿</h2><h3 id="1-1-指令解析"><a href="#1-1-指令解析" class="headerlink" title="1.1.指令解析"></a>1.1.指令解析</h3><table>
<thead>
<tr>
<th align="center">instructions</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100000</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100010</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">001101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">imme[15:11]</td>
<td align="center">imme[10:6]</td>
<td align="center">imme[5:0]</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">100011</td>
<td align="center">base</td>
<td align="center">rt</td>
<td align="center">offset[15:11]</td>
<td align="center">offset[10:6]</td>
<td align="center">offset[5:0]</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">101011</td>
<td align="center">base</td>
<td align="center">rt</td>
<td align="center">offset[15:11]</td>
<td align="center">offset[10:6]</td>
<td align="center">offset[5:0]</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">000100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">offset[15:11]</td>
<td align="center">offset[10:6]</td>
<td align="center">offset[5:0]</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">001111</td>
<td align="center">00000</td>
<td align="center">rt</td>
<td align="center">imme[15:11]</td>
<td align="center">imme[10:6]</td>
<td align="center">imme[5:0]</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">000011</td>
<td align="center">index[25:21]</td>
<td align="center">index[20:16]</td>
<td align="center">index[15:11]</td>
<td align="center">index[10:6]</td>
<td align="center">index[5:0]</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">hint</td>
<td align="center">001000</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">000000</td>
</tr>
</tbody></table>
<h3 id="1-2-数据通路"><a href="#1-2-数据通路" class="headerlink" title="1.2.数据通路"></a>1.2.数据通路</h3><ul>
<li><p>注：</p>
<ul>
<li><p>instr_index : instr[25:00]</p>
</li>
<li><p>imm&#x2F;offset : instr[15:00]</p>
</li>
<li><p>rs &#x2F; base : instr[25:21]</p>
</li>
<li><p>rt : instr[20:16]</p>
</li>
<li><p>rd : instr[15:11]</p>
</li>
</ul>
</li>
</ul>
<h4 id="1-2-1-稳定的连接"><a href="#1-2-1-稳定的连接" class="headerlink" title="1.2.1.稳定的连接"></a>1.2.1.稳定的连接</h4><ul>
<li>以下输入数据无论那条指令全部通用，即所有相关指令需要的数据来源均相同</li>
</ul>
<table>
<thead>
<tr>
<th align="center">输入数据</th>
<th align="center">数据来源</th>
<th></th>
<th align="center">输入数据</th>
<th align="center">数据来源</th>
</tr>
</thead>
<tbody><tr>
<td align="center">IFU_zero</td>
<td align="center">ALU_zero</td>
<td></td>
<td align="center">ALU_A</td>
<td align="center">GRF_RD1</td>
</tr>
<tr>
<td align="center">IFU_operation</td>
<td align="center">Ctrl_IFU_op</td>
<td></td>
<td align="center">ALU_op</td>
<td align="center">Ctrl_ALU_op</td>
</tr>
<tr>
<td align="center">IFU_offset</td>
<td align="center">offset</td>
<td></td>
<td align="center">DM_A</td>
<td align="center">ALU_result</td>
</tr>
<tr>
<td align="center">IFU_instr_index</td>
<td align="center">instr_index</td>
<td></td>
<td align="center">DM_WE</td>
<td align="center">Ctrl_DM_WE</td>
</tr>
<tr>
<td align="center">IFU_dest</td>
<td align="center">GRF_RD1</td>
<td></td>
<td align="center">DM_WD</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">GRF_A1</td>
<td align="center">rs&#x2F;base</td>
<td></td>
<td align="center">EXT_op</td>
<td align="center">Ctrl_EXT_op</td>
</tr>
<tr>
<td align="center">GRF_A2</td>
<td align="center">rt</td>
<td></td>
<td align="center">EXT_in</td>
<td align="center">imm&#x2F;offset</td>
</tr>
<tr>
<td align="center">GRF_WE</td>
<td align="center">Ctrl_GRF_WE</td>
<td></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h4 id="1-2-2-不稳定的连接"><a href="#1-2-2-不稳定的连接" class="headerlink" title="1.2.2.不稳定的连接"></a>1.2.2.不稳定的连接</h4><ul>
<li>以下数据在不同的有关指令下需要不同的数据来源，需要用多路选择器来实现</li>
</ul>
<table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">GRF_WA</th>
<th align="center">GRF_WD</th>
<th align="center">ALU_B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">rd</td>
<td align="center">ALU_result</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">rd</td>
<td align="center">ALU_result</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">rt</td>
<td align="center">ALU_result</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">rt</td>
<td align="center">DM_RD</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">rt</td>
<td align="center">EXT_32bitOut</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">$ra</td>
<td align="center">IFU_PC4</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h3 id="1-3-部件说明"><a href="#1-3-部件说明" class="headerlink" title="1.3.部件说明"></a>1.3.部件说明</h3><h4 id="1-3-1-IFU（取指令单元）"><a href="#1-3-1-IFU（取指令单元）" class="headerlink" title="1.3.1.IFU（取指令单元）"></a>1.3.1.IFU（取指令单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">zero</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">相对跳转的条件是否成立</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">下一个地址的计算方式</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">instr_index</td>
<td align="center">In</td>
<td align="center">26</td>
<td align="center">绝对跳转的目的地址 （26位立即数）</td>
</tr>
<tr>
<td align="center">dest</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">绝对跳转的目的地址（寄存器值）</td>
</tr>
<tr>
<td align="center">instruction</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">当前指令内容</td>
</tr>
<tr>
<td align="center">PC4</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">输出<code>PC + 4</code>以存入<code>$ra</code></td>
</tr>
</tbody></table>
<ul>
<li>此处operation与zero共同决定了传入NPC的operation信号，即如果有相对跳转指令而条件不成立则变为顺序执行</li>
</ul>
<h5 id="1-3-1-1-PC（程序计数器）"><a href="#1-3-1-1-PC（程序计数器）" class="headerlink" title="1.3.1.1.PC（程序计数器）"></a>1.3.1.1.PC（程序计数器）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入下一条指令的地址</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">输出当前指令的地址</td>
</tr>
</tbody></table>
<ul>
<li>计数器初始值为0x00003000，实现方法是当寄存器输出为零（复位）时输出初始值。</li>
<li>地址范围：0x00003000 ~ 0x00006FFF。</li>
</ul>
<h5 id="1-3-1-2-NPC（次地址计算单元）"><a href="#1-3-1-2-NPC（次地址计算单元）" class="headerlink" title="1.3.1.2.NPC（次地址计算单元）"></a>1.3.1.2.NPC（次地址计算单元）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入当前指令地址</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">下一个地址的计算方式</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">instr_index</td>
<td align="center">In</td>
<td align="center">26</td>
<td align="center">绝对跳转的目的地址 （26位立即数）</td>
</tr>
<tr>
<td align="center">dest</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">绝对跳转的目的地址（寄存器值）</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">输出下一条指令的地址</td>
</tr>
<tr>
<td align="center">PC4</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">输出$PC + 4$以存入$ra</td>
</tr>
</tbody></table>
<ul>
<li>现在有四种跳转方法，如下表：</li>
</ul>
<table>
<thead>
<tr>
<th align="center">operation</th>
<th align="center">说明</th>
<th align="center">NPC</th>
<th align="center">PC4</th>
</tr>
</thead>
<tbody><tr>
<td align="center">00</td>
<td align="center">顺序执行</td>
<td align="center">$PC + 4$</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">相对跳转（偏移量为立即数）</td>
<td align="center">$PC + 4 + offset |0^2$</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">绝对跳转并链接（目的地址为立即数）</td>
<td align="center">$PC[31,28]|instr _ index|0^2$</td>
<td align="center">$PC + 4$</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">绝对跳转（目的地址来自寄存器）</td>
<td align="center">$dest$</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h5 id="1-3-1-3-IM（指令存储器）"><a href="#1-3-1-3-IM（指令存储器）" class="headerlink" title="1.3.1.3.IM（指令存储器）"></a>1.3.1.3.IM（指令存储器）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入当前指令地址</td>
</tr>
<tr>
<td align="center">instruction</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">当前指令内容</td>
</tr>
</tbody></table>
<ul>
<li>用 <strong>ROM</strong> 实现指令存储，<strong>ROM</strong> 的 <strong>0</strong> 位置存储的是 <strong>PC</strong> 为 <strong>0x00003000</strong> 的指令，每条指令是一个 32bit 常数。</li>
</ul>
<h4 id="1-3-2-GRF（通用寄存器组）"><a href="#1-3-2-GRF（通用寄存器组）" class="headerlink" title="1.3.2.GRF（通用寄存器组）"></a>1.3.2.GRF（通用寄存器组）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">同步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">RA1</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD1</td>
</tr>
<tr>
<td align="center">RA2</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD2</td>
</tr>
<tr>
<td align="center">WA</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，存储WD输入的数据</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD1</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出1</td>
</tr>
<tr>
<td align="center">RD2</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出2</td>
</tr>
</tbody></table>
<ul>
<li><p>包含32个寄存器（0到31号），具有<strong>同步复位</strong>功能。</p>
</li>
<li><p><strong>0 号寄存器</strong>的值始终保持为 0。其他寄存器<strong>初始值（复位后）均为 0</strong>。</p>
</li>
</ul>
<h4 id="1-3-3-ALU（算术逻辑单元）"><a href="#1-3-3-ALU（算术逻辑单元）" class="headerlink" title="1.3.3.ALU（算术逻辑单元）"></a>1.3.3.ALU（算术逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数2</td>
</tr>
<tr>
<td align="center">op</td>
<td align="center">In</td>
<td align="center">3</td>
<td align="center">运算符选择</td>
</tr>
<tr>
<td align="center">result</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数值运算结果</td>
</tr>
<tr>
<td align="center">zero</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">逻辑运算结果</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">result</th>
<th align="center">zero</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加（无符号运算，不考虑溢出）</td>
<td align="center">000</td>
<td align="center">$A + B [31,0]$</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">减（无符号运算，不考虑溢出）</td>
<td align="center">001</td>
<td align="center">$A - B [31,0]$</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">按位或</td>
<td align="center">010</td>
<td align="center">$A | B$</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">是否相等</td>
<td align="center">011</td>
<td align="center">&#x2F;</td>
<td align="center">$A &#x3D;&#x3D; B$</td>
</tr>
<tr>
<td align="center">是否小于</td>
<td align="center">100</td>
<td align="center">&#x2F;</td>
<td align="center">$A &lt; B$</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-4-DM（数据存储器）"><a href="#1-3-4-DM（数据存储器）" class="headerlink" title="1.3.4.DM（数据存储器）"></a>1.3.4.DM（数据存储器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">异步复位信号</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入存取数据的地址</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出</td>
</tr>
</tbody></table>
<ul>
<li><strong>起始地址：0x00000000</strong>。</li>
<li>地址范围：0x00000000 ~ 0x00002FFF。</li>
</ul>
<h4 id="1-3-5-EXT（扩展单元）"><a href="#1-3-5-EXT（扩展单元）" class="headerlink" title="1.3.5.EXT（扩展单元）"></a>1.3.5.EXT（扩展单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">16bitIn</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">待扩展的16位数据</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">指示扩展方法</td>
</tr>
<tr>
<td align="center">32bitOut</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">扩展后的32位数据</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">operation</th>
</tr>
</thead>
<tbody><tr>
<td align="center">零拓展</td>
<td align="center">00</td>
</tr>
<tr>
<td align="center">符号拓展</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">将数据加载至高16位</td>
<td align="center">10</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-6-Controller（控制器）"><a href="#1-3-6-Controller（控制器）" class="headerlink" title="1.3.6.Controller（控制器）"></a>1.3.6.Controller（控制器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">6</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">6</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">IFU_op</td>
<td align="center">out</td>
<td align="center">2</td>
<td align="center">计算次地址的模式</td>
</tr>
<tr>
<td align="center">GRF_WE</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">是否需要将数据写入寄存器</td>
</tr>
<tr>
<td align="center">ALU_op</td>
<td align="center">out</td>
<td align="center">3</td>
<td align="center">当前ALU需要运算的模式</td>
</tr>
<tr>
<td align="center">DM_WE</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">数据存储器是否需要写入数据</td>
</tr>
<tr>
<td align="center">EXT_op</td>
<td align="center">out</td>
<td align="center">2</td>
<td align="center">当前EXT需要拓展的模式</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">GRF_WA_slt</td>
<td align="center">out</td>
<td align="center">2</td>
<td align="center">选择被写入的寄存器</td>
</tr>
<tr>
<td align="center">GRF_WD_slt</td>
<td align="center">out</td>
<td align="center">2</td>
<td align="center">选择写入寄存器的数据</td>
</tr>
<tr>
<td align="center">ALU_B_slt</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">选择ALU的第二个操作数</td>
</tr>
</tbody></table>
<ul>
<li><p>本模块根据输入的指令的不同，产生不同的控制信号。</p>
</li>
<li><p>相对用logisim实现时简化了与逻辑和或逻辑，直接用代码实现。</p>
</li>
<li><p>下表列举了选则信号的编码与对应数据的关系：</p>
<table>
<thead>
<tr>
<th align="center">GRF_WA_slt</th>
<th align="center"></th>
<th align="center">GRF_WD_slt</th>
<th align="center"></th>
<th align="center">ALU_B_slt</th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
<td align="center">编码</td>
<td align="center">对应数据</td>
</tr>
<tr>
<td align="center">00</td>
<td align="center">rd</td>
<td align="center">00</td>
<td align="center">ALU_result</td>
<td align="center">0</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">rt</td>
<td align="center">01</td>
<td align="center">DM_RD</td>
<td align="center">1</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">$ra</td>
<td align="center">10</td>
<td align="center">EXT_32bitOut</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center">11</td>
<td align="center">IFU_PC4</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
</li>
<li><p>IFU_op, ALU_op, EXT_op : 见部件说明的相关部分</p>
</li>
</ul>
<h5 id="指令对应输出"><a href="#指令对应输出" class="headerlink" title="指令对应输出"></a>指令对应输出</h5><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">IFU_op</th>
<th align="center">GRF_WE</th>
<th align="center">ALU_op</th>
<th align="center">DM_WE</th>
<th align="center">EXT_op</th>
<th align="center">GRF_WA_slt</th>
<th align="center">GRF_WD_slt</th>
<th align="center">ALU_B_slt</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">sub</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">00</td>
<td align="center">00</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">or_</td>
<td align="center">0</td>
<td align="center">zero_ext</td>
<td align="center">01</td>
<td align="center">00</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">sign_ext</td>
<td align="center">01</td>
<td align="center">01</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">continue</td>
<td align="center">0</td>
<td align="center">add</td>
<td align="center">1</td>
<td align="center">sign_ext</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">branch</td>
<td align="center">0</td>
<td align="center">equal</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">continue</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">high_ext</td>
<td align="center">01</td>
<td align="center">10</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">jumpAndLink</td>
<td align="center">1</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">10</td>
<td align="center">11</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">jumpRegister</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">0</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h2 id="2-测试方案"><a href="#2-测试方案" class="headerlink" title="2.测试方案"></a>2.测试方案</h2><p>考虑各种情况，编写测试数据（如下），用Mars汇编为机器码导入CPU并进行对拍。</p>
<p>本次作业中，也使用了同学制作的自动评测机，随机生成指令，由魔改版Mars进行汇编并生成机器码，进行仿真后对比标准输出与isim的输出。</p>
<figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ori &amp; lui </span></span><br><span class="line"><span class="comment"># 考虑原本有值的寄存器、没有值的寄存器、恒为零的$0，以及立即数的正、负、零</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> <span class="number">0x1111</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> $<span class="built_in">t1</span> <span class="number">0x4444</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t3</span> $<span class="built_in">t2</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t3</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">zero</span> $<span class="built_in">t4</span> <span class="number">0x2341</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t3</span> <span class="number">0x2233</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t2</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t9</span> <span class="number">0x4567</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">zero</span> <span class="number">0xffff</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add &amp; sub  </span></span><br><span class="line"><span class="comment"># 考虑相同寄存器之间、不同寄存器之间；正数、负数、零之间的加减</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> <span class="number">0x4321</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t3</span> $<span class="built_in">t1</span> $<span class="built_in">t2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xfeda</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t4</span> <span class="number">0x5678</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t5</span> $<span class="built_in">t4</span> $<span class="built_in">t3</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t6</span> $<span class="built_in">t5</span> $<span class="built_in">t4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t7</span> <span class="number">0x7777</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t7</span> $<span class="built_in">t7</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t8</span> $<span class="built_in">t7</span> $<span class="built_in">t6</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t9</span> $<span class="built_in">t7</span> $<span class="built_in">t3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> <span class="number">0x4321</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t3</span> $<span class="built_in">t1</span> $<span class="built_in">t2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xfeda</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t4</span> <span class="number">0x5678</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t5</span> $<span class="built_in">t4</span> $<span class="built_in">t3</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t6</span> $<span class="built_in">t5</span> $<span class="built_in">t4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t7</span> <span class="number">0x7777</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t7</span> $<span class="built_in">t7</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t8</span> $<span class="built_in">t7</span> $<span class="built_in">t6</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t9</span> $<span class="built_in">t7</span> $<span class="built_in">t3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lw &amp; sw </span></span><br><span class="line"><span class="comment"># 考虑base、offset分别的正负零情形，但是总体上加和需要保证大于等于零</span></span><br><span class="line"><span class="comment"># 考虑写入时目标地址不为0的情形和读取时目标寄存器为$0的情形</span></span><br><span class="line">    <span class="comment"># base == 0 &amp;&amp; offset &gt;= 0</span></span><br><span class="line">    <span class="comment"># the target register maybe $0</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0xafdc</span> </span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0010</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0110</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t0</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0010</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> <span class="number">0x0110</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">zero</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base &lt; 0 &amp;&amp; offset &gt; 0</span></span><br><span class="line">    <span class="comment"># the place to store maybe already occupied</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0xafdc</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0010</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0010</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0110</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0010</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> <span class="number">0x0110</span>($<span class="built_in">t0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base &gt; 0</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0x0066</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0xccff</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0100</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0000</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> -<span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> -<span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0000</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> -<span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t3</span> -<span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t4</span> <span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t5</span> <span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># beq (&amp; nop)</span></span><br><span class="line"><span class="comment"># 考虑是否需要跳转和offset的正负零情况</span></span><br><span class="line"><span class="comment"># 这段代码最后会卡在跳转到自身的指令不再向下进行</span></span><br><span class="line"><span class="symbol">    label0:</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s1</span> $<span class="built_in">s1</span> <span class="number">0x5678</span></span><br><span class="line"><span class="symbol">    label1:</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label1</span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label2</span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label0</span><br><span class="line"><span class="symbol">    label2:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t0</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">zero</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s1</span> $<span class="built_in">zero</span> <span class="number">0x1234</span></span><br><span class="line"><span class="symbol">    label3:</span></span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">beq </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> label4</span><br><span class="line"><span class="symbol">    label5:</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label5</span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span><span class="symbol">    label4:</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t0</span> $<span class="built_in">t0</span> $<span class="built_in">s0</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label3</span><br><span class="line"></span><br><span class="line"><span class="comment"># jal</span></span><br><span class="line"><span class="comment"># 考虑向前、向后、向自己跳转，但是向自己跳转的指令需要单独测试</span></span><br><span class="line"><span class="symbol">    tar0:</span></span><br><span class="line">    <span class="keyword">jal </span>tar1</span><br><span class="line"><span class="symbol">    tar1:</span></span><br><span class="line">    <span class="keyword">jal </span>tar0</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">    tar2:</span></span><br><span class="line">    <span class="keyword">jal </span>tar2</span><br><span class="line"></span><br><span class="line"><span class="comment"># jr</span></span><br><span class="line"><span class="comment"># 考虑向前、向后、向自己跳转，但是向自己跳转的指令需要单独测试</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x300c</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">ori </span>$<span class="built_in">t1</span> <span class="number">0x3000</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="built_in">t1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x3004</span></span><br><span class="line">    <span class="keyword">jr </span>$<span class="built_in">t0</span></span><br></pre></td></tr></table></figure>

<h2 id="3-思考题"><a href="#3-思考题" class="headerlink" title="3.思考题"></a>3.思考题</h2><ol>
<li><p><strong>阅读下面给出的 DM 的输入示例中（示例 DM 容量为 4KB，即 32bit × 1024字），根据你的理解回答，这个 addr 信号又是从哪里来的？地址信号 addr 位数为什么是 [11:2] 而不是 [9:0] ？</strong></p>
<p>addr信号来自ALU的数值计算结果，表示base寄存器中的值与offset的加和；</p>
<p>addr的位数用[11:2]是因为上述计算结果以字节为单位，但是我们如果用32位reg数组建模DM，数组编号以字为单位，所以需要取计算结果的[11:2]位，即右移2位再取低10位（由DM大小决定位数，1024字即取低10位）。</p>
</li>
<li><p><strong>思考上述两种控制器设计的译码方式，给出代码示例，并尝试对比各方式的优劣。</strong></p>
<ul>
<li><p>译码方式一：记录下 <strong>指令对应的控制信号如何取值</strong></p>
<p>代码示例：</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span> (opcode)</span><br><span class="line">        `R_type : <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">case</span> (func)</span><br><span class="line">                `func1 : <span class="keyword">begin</span></span><br><span class="line">                    ctrlCode0 = <span class="number">1</span>;</span><br><span class="line">                    ctrlCode1 = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `func1 : <span class="keyword">begin</span></span><br><span class="line">                    ctrlCode0 = <span class="number">0</span>;</span><br><span class="line">                    ctrlCode1 = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        `op1 : <span class="keyword">begin</span></span><br><span class="line">            ctrlCode0 = <span class="number">0</span>;</span><br><span class="line">            ctrlCode1 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        `op2 : <span class="keyword">begin</span></span><br><span class="line">            ctrlCode0 = <span class="number">1</span>;</span><br><span class="line">            ctrlCode1 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>译码方式二：记录下<strong>控制信号每种取值所对应的指令</strong></p>
<p>代码示例：</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    ctrlCode0 = (opcode == `R_type &amp;&amp; func == `func1) ||</span><br><span class="line">                (opcode == `R_type &amp;&amp; func == `func2) || </span><br><span class="line">                (opcode == `op1) || (opcode == `op2) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    ctrlCode1 = (opcode == `R_type &amp;&amp; func == `func1) ||</span><br><span class="line">                (opcode == `R_type &amp;&amp; func == `func3) || </span><br><span class="line">                (opcode == `op1) || (opcode == `op4) ? <span class="number">1</span> : <span class="number">0</span>;;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>优劣对比：</p>
<p>我认为第一种方法比较繁琐但是直观，相当于把数据通路的表格填写一遍，也比较容易添加新指令，在没有大调整（不需要新的控制信号）的前提下只需要增加一种情况，填一列表即可；而第二种方法相对简洁，也比较接近上次用logisim实现时使用的或逻辑模块，但是分析起来比较抽象，写一个控制信号的输出需要把所有指令都部分地分析一遍，比较麻烦。</p>
</li>
</ul>
</li>
<li><p>*<em>在相应的部件中，复位信号的设计都是 <em>同步复位</em>，这与 P3 中的设计要求不同。请对比 <em>同步复位</em> 与 <em>异步复位</em> 这两种方式的 reset 信号与 clk 信号优先级的关系。</em>*</p>
<p>同步复位时clk信号优先级高于reset，只有当时钟上升沿到来时reset信号才能起作用。</p>
<p>异步复位时reset信号优先级高于clk，无论何时只要reset信号有效立即复位，不需要考虑时钟沿。</p>
</li>
<li><p><strong>C 语言是一种弱类型程序设计语言。C 语言中不对计算结果溢出进行处理，这意味着 C 语言要求程序员必须很清楚计算结果是否会导致溢出。因此，如果仅仅支持 C 语言，MIPS 指令的所有计算指令均可以忽略溢出。 请说明为什么在忽略溢出的前提下，addi 与 addiu 是等价的，add 与 addu 是等价的。</strong></p>
<p><strong>提示：阅读《MIPS32® Architecture For Programmers Volume II: The MIPS32® Instruction Set》中相关指令的 Operation 部分。</strong></p>
<p>对四种指令的Operation比较分析</p>
<p>ADDI_Operation:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">temp ← (GPR[rs]31||GPR[rs]31..0) + sign_extend(immediate)</span><br><span class="line">if temp32 ≠ temp31 then</span><br><span class="line">    SignalException(IntegerOverflow)</span><br><span class="line">else</span><br><span class="line">    GPR[rt] ← temp</span><br><span class="line">endif</span><br></pre></td></tr></table></figure>

<p>ADDIU_Operation:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">temp ← GPR[rs] + sign_extend(immediate)</span><br><span class="line">GPR[rt]← temp</span><br></pre></td></tr></table></figure>

<p>ADD_Operation:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">temp ← (GPR[rs]31||GPR[rs]31..0) + (GPR[rt]31||GPR[rt]31..0)</span><br><span class="line">if temp32 ≠ temp31 then</span><br><span class="line">    SignalException(IntegerOverflow)</span><br><span class="line">else</span><br><span class="line">    GPR[rd] ← temp</span><br><span class="line">endif</span><br></pre></td></tr></table></figure>

<p>ADDU_Operation:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">temp ← GPR[rs] + GPR[rt]</span><br><span class="line">GPR[rd] ← temp</span><br></pre></td></tr></table></figure>

<p>可以看出：addi 与 addiu ，add 与 addu 的区别都只在于是否将操作数符号拓展至三十一位再相加并比较31位和32位是否相同，而这个操作的目的就是为了检测是否有溢出，因此忽略溢出时它们自然分别等价。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>BUAA_CO</category>
      </categories>
      <tags>
        <tag>BUAA</tag>
        <tag>CO_P4</tag>
      </tags>
  </entry>
  <entry>
    <title>BUAA_CO_P3_Document</title>
    <url>/2024/06/21/BUAA-CO-P3-Document/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<h1 id="单周期CPU设计文档"><a href="#单周期CPU设计文档" class="headerlink" title="单周期CPU设计文档"></a>单周期CPU设计文档</h1>
</blockquote>

<span id="more"></span>

<h2 id="1-设计草稿"><a href="#1-设计草稿" class="headerlink" title="1.设计草稿"></a>1.设计草稿</h2><h3 id="1-1-指令解析"><a href="#1-1-指令解析" class="headerlink" title="1.1.指令解析"></a>1.1.指令解析</h3><table>
<thead>
<tr>
<th align="center">instructions</th>
<th align="center">[31,26]</th>
<th align="center">[25,21]</th>
<th align="center">[20,16]</th>
<th align="center">[15,11]</th>
<th align="center">[10,6]</th>
<th align="center">[5,0]</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100000</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">000000</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">00000</td>
<td align="center">100010</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">001101</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">immediate[15,11]</td>
<td align="center">immediate[10,6]</td>
<td align="center">immediate[5,0]</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">100011</td>
<td align="center">base</td>
<td align="center">rt</td>
<td align="center">offset[15,11]</td>
<td align="center">offset[10,6]</td>
<td align="center">offset[5,0]</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">101011</td>
<td align="center">base</td>
<td align="center">rt</td>
<td align="center">offset[15,11]</td>
<td align="center">offset[10,6]</td>
<td align="center">offset[5,0]</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">000100</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">offset[15,11]</td>
<td align="center">offset[10,6]</td>
<td align="center">offset[5,0]</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">001111</td>
<td align="center">00000</td>
<td align="center">rt</td>
<td align="center">immediate[15,11]</td>
<td align="center">immediate[10,6]</td>
<td align="center">immediate[5,0]</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">000000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">00000</td>
<td align="center">000000</td>
</tr>
</tbody></table>
<h3 id="1-2-数据通路"><a href="#1-2-数据通路" class="headerlink" title="1.2.数据通路"></a>1.2.数据通路</h3><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">IFU_branch</th>
<th align="center">IFU_jump</th>
<th align="center">IFU_offset</th>
<th align="center">IFU_dest</th>
<th align="center">EXT_in</th>
<th align="center">EXT_op</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">immediate</td>
<td align="center">Ctrl_EXT_op</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">offset</td>
<td align="center">Ctrl_EXT_op</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">offset</td>
<td align="center">Ctrl_EXT_op</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">Ctrl_IFU_br &amp; ALU_A op B</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">offset</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_IFU_j</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">immediate</td>
<td align="center">Ctrl_EXT_op</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">GRF_A1</th>
<th align="center">GRF_A2</th>
<th align="center">GRF_A3</th>
<th align="center">GRF_WE</th>
<th align="center">GRF_WD</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">ALU_A op B</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">rd</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">ALU_A op B</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">rs</td>
<td align="center">&#x2F;</td>
<td align="center">rt</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">ALU_A op B</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">base</td>
<td align="center">&#x2F;</td>
<td align="center">rt</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">DM_RD</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">base</td>
<td align="center">rt</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">rs</td>
<td align="center">rt</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">rt</td>
<td align="center">Ctrl_GRF_WE</td>
<td align="center">EXT_32bitOut</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">ALU_A</th>
<th align="center">ALU_B</th>
<th align="center">ALU_op</th>
<th align="center">DM_A</th>
<th align="center">DM_WE</th>
<th align="center">DM_WD</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">GRF_RD1</td>
<td align="center">GRF_RD2</td>
<td align="center">Ctrl_ALU_op</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">GRF_RD1</td>
<td align="center">GRF_RD2</td>
<td align="center">Ctrl_ALU_op</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">GRF_RD1</td>
<td align="center">EXT_32bitOut</td>
<td align="center">Ctrl_ALU_op</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">GRF_RD1</td>
<td align="center">EXT_32bitOut</td>
<td align="center">Ctrl_ALU_op</td>
<td align="center">ALU_A op B</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">GRF_RD1</td>
<td align="center">EXT_32bitOut</td>
<td align="center">Ctrl_ALU_op</td>
<td align="center">ALU_A op B</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">GRF_RD2</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">GRF_RD1</td>
<td align="center">GRF_RD2</td>
<td align="center">Ctrl_ALU_op</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">Ctrl_DM_WE</td>
<td align="center">&#x2F;</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<p>注：</p>
<ul>
<li><ul>
<li><p>immediate &#x2F; offset : instr[15,00]</p>
</li>
<li><p>rs &#x2F; base : instr[25,21]</p>
</li>
<li><p>rt : instr[20,16]</p>
</li>
<li><p>rd : instr[15,11]</p>
</li>
</ul>
</li>
</ul>
<h3 id="1-3-部件说明"><a href="#1-3-部件说明" class="headerlink" title="1.3.部件说明"></a>1.3.部件说明</h3><h4 id="1-3-1-IFU（取指令单元）"><a href="#1-3-1-IFU（取指令单元）" class="headerlink" title="1.3.1.IFU（取指令单元）"></a>1.3.1.IFU（取指令单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">异步复位信号</td>
</tr>
<tr>
<td align="center">branch</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">是否需要基于相对地址的跳转</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">jump</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">是否需要基于绝对地址的跳转</td>
</tr>
<tr>
<td align="center">dest</td>
<td align="center">In</td>
<td align="center">26</td>
<td align="center">绝对跳转的目的地址</td>
</tr>
<tr>
<td align="center">instruction</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">当前指令内容</td>
</tr>
</tbody></table>
<h5 id="1-3-1-1-PC（程序计数器）"><a href="#1-3-1-1-PC（程序计数器）" class="headerlink" title="1.3.1.1.PC（程序计数器）"></a>1.3.1.1.PC（程序计数器）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">NPC</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入下一条指令的地址</td>
</tr>
<tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">异步复位信号</td>
</tr>
<tr>
<td align="center">PC</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">输出当前指令的地址</td>
</tr>
</tbody></table>
<ul>
<li>计数器初始值为0x00003000，实现方法是当寄存器输出为零（复位）时输出初始值。</li>
<li>地址范围：0x00003000 ~ 0x00006FFF。</li>
</ul>
<h5 id="1-3-1-2-NPC（次地址计算单元）"><a href="#1-3-1-2-NPC（次地址计算单元）" class="headerlink" title="1.3.1.2.NPC（次地址计算单元）"></a>1.3.1.2.NPC（次地址计算单元）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入当前指令地址</td>
</tr>
<tr>
<td align="center">branch</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">是否需要基于相对地址的跳转</td>
</tr>
<tr>
<td align="center">offset</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">相对跳转的偏移量</td>
</tr>
<tr>
<td align="center">jump</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">是否需要基于绝对地址的跳转</td>
</tr>
<tr>
<td align="center">dest</td>
<td align="center">In</td>
<td align="center">26</td>
<td align="center">绝对跳转的目的地址</td>
</tr>
<tr>
<td align="center">NPC</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">输出下一条指令的地址</td>
</tr>
</tbody></table>
<ul>
<li>现在有三种使用方法，如下表：</li>
</ul>
<table>
<thead>
<tr>
<th align="center">branch</th>
<th align="center">jump</th>
<th align="center">NPC</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">$PC + 4$</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">$PC + 4 + offset \times 4$</td>
</tr>
<tr>
<td align="center">X</td>
<td align="center">1</td>
<td align="center">$dest \times 4$</td>
</tr>
</tbody></table>
<h5 id="1-3-1-3-IM（指令存储器）"><a href="#1-3-1-3-IM（指令存储器）" class="headerlink" title="1.3.1.3.IM（指令存储器）"></a>1.3.1.3.IM（指令存储器）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">PC</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入当前指令地址</td>
</tr>
<tr>
<td align="center">instruction</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">当前指令内容</td>
</tr>
</tbody></table>
<ul>
<li>用 <strong>ROM</strong> 实现指令存储，<strong>ROM</strong> 的 <strong>0</strong> 位置存储的是 <strong>PC</strong> 为 <strong>0x00003000</strong> 的指令，每条指令是一个 32bit 常数。</li>
</ul>
<h4 id="1-3-2-GRF（通用寄存器组）"><a href="#1-3-2-GRF（通用寄存器组）" class="headerlink" title="1.3.2.GRF（通用寄存器组）"></a>1.3.2.GRF（通用寄存器组）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">异步复位信号</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">A1</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD1</td>
</tr>
<tr>
<td align="center">A2</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，将其中存储的数据输出到RD2</td>
</tr>
<tr>
<td align="center">A3</td>
<td align="center">In</td>
<td align="center">5</td>
<td align="center">指定一个寄存器，存储WD输入的数据</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD1</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出1</td>
</tr>
<tr>
<td align="center">RD2</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出2</td>
</tr>
</tbody></table>
<ul>
<li><p>包含32个寄存器（0到31号），具有<strong>异步复位</strong>功能。</p>
</li>
<li><p><strong>0 号寄存器</strong>的值始终保持为 0。其他寄存器<strong>初始值（复位后）均为 0</strong>。</p>
</li>
</ul>
<h4 id="1-3-3-ALU（算术逻辑单元）"><a href="#1-3-3-ALU（算术逻辑单元）" class="headerlink" title="1.3.3.ALU（算术逻辑单元）"></a>1.3.3.ALU（算术逻辑单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算数2</td>
</tr>
<tr>
<td align="center">op</td>
<td align="center">In</td>
<td align="center">3</td>
<td align="center">运算符选择</td>
</tr>
<tr>
<td align="center">A op B</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">运算结果</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">op</th>
<th align="center">输出</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加（无符号运算，不考虑溢出）</td>
<td align="center">000</td>
<td align="center">$A + B [31,0]$</td>
</tr>
<tr>
<td align="center">减（无符号运算，不考虑溢出）</td>
<td align="center">001</td>
<td align="center">$A - B [31,0]$</td>
</tr>
<tr>
<td align="center">按位或</td>
<td align="center">010</td>
<td align="center">$A | B$</td>
</tr>
<tr>
<td align="center">是否大于</td>
<td align="center">011</td>
<td align="center">$A &gt; B$</td>
</tr>
<tr>
<td align="center">是否相等</td>
<td align="center">100</td>
<td align="center">$A &#x3D;&#x3D; B$</td>
</tr>
<tr>
<td align="center">是否小于</td>
<td align="center">101</td>
<td align="center">$A &lt; B$</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-4-DM（数据存储器）"><a href="#1-3-4-DM（数据存储器）" class="headerlink" title="1.3.4.DM（数据存储器）"></a>1.3.4.DM（数据存储器）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">clk</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">时钟信号</td>
</tr>
<tr>
<td align="center">rst</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">异步复位信号</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">输入存取数据的地址</td>
</tr>
<tr>
<td align="center">WE</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">写使能信号</td>
</tr>
<tr>
<td align="center">WD</td>
<td align="center">In</td>
<td align="center">32</td>
<td align="center">数据输入</td>
</tr>
<tr>
<td align="center">RD</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">数据输出</td>
</tr>
</tbody></table>
<ul>
<li><strong>起始地址：0x00000000</strong>。</li>
<li>地址范围：0x00000000 ~ 0x00002FFF。</li>
</ul>
<h4 id="1-3-5-EXT（扩展单元）"><a href="#1-3-5-EXT（扩展单元）" class="headerlink" title="1.3.5.EXT（扩展单元）"></a>1.3.5.EXT（扩展单元）</h4><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">16bitIn</td>
<td align="center">In</td>
<td align="center">16</td>
<td align="center">待扩展的16位数据</td>
</tr>
<tr>
<td align="center">operation</td>
<td align="center">In</td>
<td align="center">2</td>
<td align="center">指示扩展方法</td>
</tr>
<tr>
<td align="center">32bitOut</td>
<td align="center">Out</td>
<td align="center">32</td>
<td align="center">扩展后的32位数据</td>
</tr>
</tbody></table>
<ul>
<li><p>功能说明：</p>
<table>
<thead>
<tr>
<th align="center">功能名称</th>
<th align="center">operation</th>
</tr>
</thead>
<tbody><tr>
<td align="center">零拓展</td>
<td align="center">00</td>
</tr>
<tr>
<td align="center">符号拓展</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">将数据加载至高16位</td>
<td align="center">10</td>
</tr>
</tbody></table>
</li>
</ul>
<h4 id="1-3-6-Controller（控制器）"><a href="#1-3-6-Controller（控制器）" class="headerlink" title="1.3.6.Controller（控制器）"></a>1.3.6.Controller（控制器）</h4><h5 id="1-3-6-1-AND-logic（与逻辑，识别）"><a href="#1-3-6-1-AND-logic（与逻辑，识别）" class="headerlink" title="1.3.6.1.AND_logic（与逻辑，识别）"></a>1.3.6.1.AND_logic（与逻辑，识别）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">opcode</td>
<td align="center">In</td>
<td align="center">6</td>
<td align="center">操作码，用于标识指令的功能</td>
</tr>
<tr>
<td align="center">func</td>
<td align="center">In</td>
<td align="center">6</td>
<td align="center">用于辅助 op 来识别指令</td>
</tr>
<tr>
<td align="center">add</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是add</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是sub</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是ori</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是lw</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是sw</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是beq</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是lui</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">Out</td>
<td align="center">1</td>
<td align="center">判断本条指令是nop</td>
</tr>
</tbody></table>
<ul>
<li>将输入的机器码识别为相应的指令。</li>
</ul>
<table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">opcode([31,26])</th>
<th align="center">func([5:0])</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">000000</td>
<td align="center">100000</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">000000</td>
<td align="center">100010</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">001101</td>
<td align="center">xxxxxx</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">100011</td>
<td align="center">xxxxxx</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">101011</td>
<td align="center">xxxxxx</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">000100</td>
<td align="center">xxxxxx</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">001111</td>
<td align="center">xxxxxx</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">000000</td>
<td align="center">000000</td>
</tr>
</tbody></table>
<h5 id="1-3-6-2-OR-logic（或逻辑，生成）"><a href="#1-3-6-2-OR-logic（或逻辑，生成）" class="headerlink" title="1.3.6.2.OR_logic（或逻辑，生成）"></a>1.3.6.2.OR_logic（或逻辑，生成）</h5><table>
<thead>
<tr>
<th align="center">端口名称</th>
<th align="center">方向</th>
<th align="center">位宽</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是add</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是sub</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是ori</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是lw</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是sw</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是beq</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是lui</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">In</td>
<td align="center">1</td>
<td align="center">本条指令是nop</td>
</tr>
<tr>
<td align="center">IFU_br</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">是否需要相对跳转</td>
</tr>
<tr>
<td align="center">IFU_j</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">是否需要绝对跳转</td>
</tr>
<tr>
<td align="center">GRF_A3_slt</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">选择被写入的寄存器</td>
</tr>
<tr>
<td align="center">GRF_WE</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">是否需要将数据写入寄存器</td>
</tr>
<tr>
<td align="center">GRF_WD_slt</td>
<td align="center">out</td>
<td align="center">2</td>
<td align="center">选择写入寄存器的数据</td>
</tr>
<tr>
<td align="center">ALU_B_slt</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">选择ALU的第二个操作数</td>
</tr>
<tr>
<td align="center">ALU_op</td>
<td align="center">out</td>
<td align="center">3</td>
<td align="center">当前ALU需要运算的模式</td>
</tr>
<tr>
<td align="center">DM_WE</td>
<td align="center">out</td>
<td align="center">1</td>
<td align="center">数据存储器是否需要写入数据</td>
</tr>
<tr>
<td align="center">EXT_op</td>
<td align="center">out</td>
<td align="center">2</td>
<td align="center">当前EXT需要拓展的模式</td>
</tr>
</tbody></table>
<ul>
<li><p>根据输入的指令的不同，产生不同的控制信号。</p>
</li>
<li><p>注释</p>
<ul>
<li><p>GRF_A3_slt : 0 - rd; 1 - rt.</p>
</li>
<li><p>GRF_WD_slt : 00 - ALU_A op B; 01 - DM_RD; 10 : EXT_32bitOut.</p>
</li>
<li><p>ALU_B_slt : 0 - GRF_RD2; 1 - EXT_32bitOut.</p>
</li>
<li><p>ALU_op, EXT_op : 见部件说明的相关部分</p>
</li>
</ul>
</li>
</ul>
<h6 id="OR-logic真值表-本表仅涉及有多种可能的信号。"><a href="#OR-logic真值表-本表仅涉及有多种可能的信号。" class="headerlink" title="OR_logic真值表(本表仅涉及有多种可能的信号。)"></a>OR_logic真值表(本表仅涉及有多种可能的信号。)</h6><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">IFU_br</th>
<th align="center">IFU_j</th>
<th align="center">GRF_A3_slt</th>
<th align="center">GRF_WE</th>
<th align="center">GRF_WD_slt</th>
<th align="center">ALU_B_slt</th>
<th align="center">ALU_op</th>
<th align="center">DM_WE</th>
<th align="center">EXT_op</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">00</td>
<td align="center">0</td>
<td align="center">000</td>
<td align="center">0</td>
<td align="center">xx</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">00</td>
<td align="center">0</td>
<td align="center">001</td>
<td align="center">0</td>
<td align="center">xx</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">00</td>
<td align="center">1</td>
<td align="center">010</td>
<td align="center">0</td>
<td align="center">00</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">01</td>
<td align="center">1</td>
<td align="center">000</td>
<td align="center">0</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">x</td>
<td align="center">0</td>
<td align="center">xx</td>
<td align="center">1</td>
<td align="center">000</td>
<td align="center">1</td>
<td align="center">01</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">x</td>
<td align="center">0</td>
<td align="center">xx</td>
<td align="center">0</td>
<td align="center">100</td>
<td align="center">0</td>
<td align="center">xx</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">10</td>
<td align="center">x</td>
<td align="center">xxx</td>
<td align="center">0</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">nop</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
<td align="center">&#x2F;</td>
</tr>
</tbody></table>
<h2 id="2-测试方案"><a href="#2-测试方案" class="headerlink" title="2.测试方案"></a>2.测试方案</h2><p>考虑各种情况，编写测试数据（如下），用Mars汇编为机器码导入CPU并进行对拍</p>
<figure class="highlight mips"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ori &amp; lui    </span></span><br><span class="line"><span class="comment"># 考虑原本有值的寄存器、没有值的寄存器、恒为零的$0，以及立即数的正、负、零</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> <span class="number">0x1111</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> $<span class="built_in">t1</span> <span class="number">0x4444</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t3</span> $<span class="built_in">t2</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t3</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">zero</span> $<span class="built_in">t4</span> <span class="number">0x2341</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t3</span> <span class="number">0x2233</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t2</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t9</span> <span class="number">0x4567</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">zero</span> <span class="number">0xffff</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add &amp; sub        </span></span><br><span class="line"><span class="comment"># 考虑相同寄存器之间、不同寄存器之间；正数、负数、零之间的加减</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> <span class="number">0x4321</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t3</span> $<span class="built_in">t1</span> $<span class="built_in">t2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xfeda</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t4</span> <span class="number">0x5678</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t5</span> $<span class="built_in">t4</span> $<span class="built_in">t3</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t6</span> $<span class="built_in">t5</span> $<span class="built_in">t4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t7</span> <span class="number">0x7777</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t7</span> $<span class="built_in">t7</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t8</span> $<span class="built_in">t7</span> $<span class="built_in">t6</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t9</span> $<span class="built_in">t7</span> $<span class="built_in">t3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t1</span> $<span class="built_in">t0</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t2</span> <span class="number">0x4321</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t3</span> $<span class="built_in">t1</span> $<span class="built_in">t2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t4</span> <span class="number">0xfeda</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t4</span> $<span class="built_in">t4</span> <span class="number">0x5678</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t5</span> $<span class="built_in">t4</span> $<span class="built_in">t3</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t6</span> $<span class="built_in">t5</span> $<span class="built_in">t4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t7</span> <span class="number">0x7777</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t7</span> $<span class="built_in">t7</span> <span class="number">0xffff</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t8</span> $<span class="built_in">t7</span> $<span class="built_in">t6</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t9</span> $<span class="built_in">t7</span> $<span class="built_in">t3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lw &amp; sw    </span></span><br><span class="line"><span class="comment"># 考虑base、offset分别的正负零情形，但是总体上加和需要保证大于等于零</span></span><br><span class="line"><span class="comment"># 考虑写入时目标地址不为0的情形和读取时目标寄存器为$0的情形</span></span><br><span class="line">    <span class="comment"># base == 0 &amp;&amp; offset &gt;= 0</span></span><br><span class="line">    <span class="comment"># the target register maybe $0</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0xafdc</span>    </span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0010</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0110</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t0</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0010</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> <span class="number">0x0110</span>($<span class="built_in">zero</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">zero</span> <span class="number">0x0000</span>($<span class="built_in">zero</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base &lt; 0 &amp;&amp; offset &gt; 0</span></span><br><span class="line">    <span class="comment"># the place to store maybe already occupied</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0xafdc</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0010</span></span><br><span class="line">    <span class="keyword">sub </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> $<span class="built_in">t0</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0010</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0110</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0010</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> <span class="number">0x0110</span>($<span class="built_in">t0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># base &gt; 0</span></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">s0</span> <span class="number">0x0066</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0xccff</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> <span class="number">0x0100</span></span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0000</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> -<span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> -<span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">sw </span>$<span class="built_in">s0</span> <span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t1</span> <span class="number">0x0000</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t2</span> -<span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t3</span> -<span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t4</span> <span class="number">0x0004</span>($<span class="built_in">t0</span>)</span><br><span class="line">    <span class="keyword">lw </span>$<span class="built_in">t5</span> <span class="number">0x0100</span>($<span class="built_in">t0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># beq (&amp; nop)</span></span><br><span class="line"><span class="comment"># 考虑是否需要跳转和offset的正负零情况</span></span><br><span class="line"><span class="comment"># 这段代码最后会卡在跳转到自身的指令不再向下进行</span></span><br><span class="line"><span class="symbol">    label0:</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">s0</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s1</span> $<span class="built_in">s1</span> <span class="number">0x5678</span></span><br><span class="line"><span class="symbol">    label1:</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label1</span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label2</span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label0</span><br><span class="line"><span class="symbol">    label2:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lui </span>$<span class="built_in">t0</span> <span class="number">0x0000</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s0</span> $<span class="built_in">zero</span> <span class="number">0x1234</span></span><br><span class="line">    <span class="keyword">ori </span>$<span class="built_in">s1</span> $<span class="built_in">zero</span> <span class="number">0x1234</span></span><br><span class="line"><span class="symbol">    label3:</span></span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">beq </span>$<span class="built_in">t0</span> $<span class="built_in">zero</span> label4</span><br><span class="line"><span class="symbol">    label5:</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label5</span><br><span class="line">    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span>    <span class="keyword">nop</span></span><br><span class="line"><span class="keyword"></span><span class="symbol">    label4:</span></span><br><span class="line">    <span class="keyword">add </span>$<span class="built_in">t0</span> $<span class="built_in">t0</span> $<span class="built_in">s0</span></span><br><span class="line">    <span class="keyword">beq </span>$<span class="built_in">s0</span> $<span class="built_in">s1</span> label3</span><br></pre></td></tr></table></figure>

<h2 id="3-思考题"><a href="#3-思考题" class="headerlink" title="3.思考题"></a>3.思考题</h2><ol>
<li><p><strong>上面我们介绍了通过 FSM 理解单周期 CPU 的基本方法。请大家指出单周期 CPU 所用到的模块中，哪些发挥状态存储功能，哪些发挥状态转移功能。</strong></p>
<p>PC和GRF，DM发挥状态存储功能，NPC和controller，ALU，EXT发挥状态转移功能</p>
<p>如果以指令为界将整个CPU分为“上游”和“下游”两个FSM，则 <strong>“上游”</strong> 的摩尔型状态机<strong>输入</strong>是否需要跳转（相对或绝对）和跳转的偏移量或目的地址，以PC为<strong>状态存储</strong>模块，NPC根据输入进行<strong>状态转移</strong>计算下一条指令地址，而IM则根据当前状态（PC中储存的地址）<strong>输出</strong>对应的指令；而 <strong>“下游”</strong> 的状态机则是<strong>输入</strong>当前的指令（经过splitter分解），然后根据controller的解析，利用ALU和EXT对GRF和DM中存储的数据进行读写，这个过程中，可以认为GRF和DM是<strong>状态存储</strong>模块，而controller，ALU，EXT共同构成<strong>状态转移</strong>模块，最终<strong>输出</strong>即是“上游”状态机的输入（实际上main模块的输出是这个过程中的部分信号，不同于状态机的输出）。</p>
</li>
<li><p><strong>现在我们的模块中 IM 使用 ROM， DM 使用 RAM， GRF 使用 Register，这种做法合理吗？ 请给出分析，若有改进意见也请一并给出。</strong></p>
<p>比较合理。首先，IM是存储指令，常规条件下只需要在开始运行之前加载一次数据即可，而不需要在运行过程中反复读写，因此可以用只读的ROM实现；DM存储数据，需要在运行过程中反复读写，每个周期至多进行一次读或写操作，且需要实现异步复位，另外其需要的空间也比较大，因此用RAM实现比较合理；GRF需要在运行过程中频繁读写，需要较快的速度但不需要太大的空间，因此用Register最合理。</p>
<p>如果需要改进，可以考虑将IM与DM合并为一个RAM，分别从下往上、从上往下使用空间，这样可以在硬件一定的情况下兼顾更多种可能，如指令较少而需要存储的数据较多、存储数据较少而指令较多等情况，最大化空间利用率。但是如果这样做</p>
</li>
<li><p><strong>在上述提示的模块之外，你是否在实际实现时设计了其他的模块？如果是的话，请给出介绍和设计的思路。</strong></p>
<p>暂时还没有，只是对上述模块进行了组合连接，并未新创建模块。</p>
</li>
<li><p><strong>事实上，实现 <code>nop</code> 空指令，我们并不需要将它加入控制信号真值表，为什么？</strong></p>
<p>因为nop的机器码为32位0，对于所有的数据存储模块（包括GRF和DM），其“写使能”端口输入值必然为0，因此不会发生任何数据的存储，故不会对后续代码的运行产生影响。所以控制模块其实不需要做专门的处理，把全0作为一种default情况即可。</p>
</li>
<li><p><strong>阅读 Pre 的 <a href="http://cscore.buaa.edu.cn/tutorial/mips/mips-6/mips6-1/">“MIPS 指令集及汇编语言”</a> 一节中给出的测试样例，评价其强度（可从各个指令的覆盖情况，单一指令各种行为的覆盖情况等方面分析），并指出具体的不足之处。</strong></p>
<p>强度不够高，虽然比较全面地考虑了CPU需要实现的各个指令，但是仍有不足：</p>
<p>①没有覆盖到sub指令，最好对sub指令的正正、负负、正负、负正情况分别测试（还有比较边缘的数值情况）</p>
<p>②ori的立即数没有达到16位的最大限度附近</p>
<p>③beq指令只测试了向后跳转而没有涉及向前跳转（和原地跳转）</p>
<p>④对于所有内存操作的base寄存器，用的都是$t0寄存器，且其值始终为0</p>
</li>
</ol>
]]></content>
      <categories>
        <category>BUAA_CO</category>
      </categories>
      <tags>
        <tag>BUAA</tag>
        <tag>CO_P3</tag>
      </tags>
  </entry>
</search>
